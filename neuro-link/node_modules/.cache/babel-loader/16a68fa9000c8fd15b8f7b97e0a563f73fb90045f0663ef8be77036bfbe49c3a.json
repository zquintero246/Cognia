{"ast":null,"code":"var _jsxFileName = \"C:\\\\yo\\\\personal\\\\Proyectos\\\\CognIA Hackaton UNAB 2025\\\\neuro-link\\\\src\\\\modules\\\\Sensorial\\\\SinfoniaColores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Sensorial.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinfoniaColores({\n  volver\n}) {\n  _s();\n  const colores = [\"red\", \"blue\", \"yellow\", \"green\"];\n  const [secuencia, setSecuencia] = useState([]);\n  const [jugador, setJugador] = useState([]);\n  const [bloqueado, setBloqueado] = useState(true);\n  const [mensaje, setMensaje] = useState(\"Haz clic en 'Iniciar' para comenzar\");\n  const iniciarJuego = () => {\n    const nuevoColor = colores[Math.floor(Math.random() * colores.length)];\n    setSecuencia([nuevoColor]);\n    setJugador([]);\n    setBloqueado(true);\n    setMensaje(\"Observa la secuencia...\");\n  };\n  useEffect(() => {\n    if (secuencia.length > 0) {\n      setBloqueado(true);\n      let i = 0;\n      const intervalo = setInterval(() => {\n        iluminar(secuencia[i]);\n        i++;\n        if (i >= secuencia.length) {\n          clearInterval(intervalo);\n          setBloqueado(false);\n          setMensaje(\"Tu turno üé®\");\n        }\n      }, 800);\n    }\n  }, [secuencia]);\n  const iluminar = color => {\n    const el = document.getElementById(color);\n    if (el) {\n      el.style.opacity = 1;\n      setTimeout(() => el.style.opacity = 0.6, 400);\n    }\n  };\n  const manejarColor = color => {\n    if (bloqueado) return;\n    iluminar(color);\n    const nuevoJugador = [...jugador, color];\n    setJugador(nuevoJugador);\n    for (let i = 0; i < nuevoJugador.length; i++) {\n      if (nuevoJugador[i] !== secuencia[i]) {\n        setMensaje(\"‚ùå Incorrecto. Intenta de nuevo.\");\n        setSecuencia([]);\n        return;\n      }\n    }\n    if (nuevoJugador.length === secuencia.length) {\n      setMensaje(\"‚úÖ ¬°Bien hecho! A√±adiendo un nuevo color...\");\n      setTimeout(() => {\n        const nuevo = colores[Math.floor(Math.random() * colores.length)];\n        setSecuencia([...secuencia, nuevo]);\n        setJugador([]);\n        setBloqueado(true);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actividad-sensorial\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB6 Sinfon\\xEDa de Colores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colores-grid\",\n      children: colores.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: c,\n        className: \"color-boton\",\n        style: {\n          backgroundColor: c,\n          opacity: 0.6\n        },\n        onClick: () => manejarColor(c)\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"boton-actividad\",\n      onClick: iniciarJuego,\n      children: \"Iniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"boton-volver\",\n      onClick: volver,\n      children: \"\\u2190 Volver al m\\xF3dulo Sensorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(SinfoniaColores, \"A9Rm1MEx2iuYphkF/b88UjalW8I=\");\n_c = SinfoniaColores;\nvar _c;\n$RefreshReg$(_c, \"SinfoniaColores\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SinfoniaColores","volver","_s","colores","secuencia","setSecuencia","jugador","setJugador","bloqueado","setBloqueado","mensaje","setMensaje","iniciarJuego","nuevoColor","Math","floor","random","length","i","intervalo","setInterval","iluminar","clearInterval","color","el","document","getElementById","style","opacity","setTimeout","manejarColor","nuevoJugador","nuevo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","id","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/yo/personal/Proyectos/CognIA Hackaton UNAB 2025/neuro-link/src/modules/Sensorial/SinfoniaColores.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Sensorial.css\";\r\n\r\nexport default function SinfoniaColores({ volver }) {\r\n  const colores = [\"red\", \"blue\", \"yellow\", \"green\"];\r\n  const [secuencia, setSecuencia] = useState([]);\r\n  const [jugador, setJugador] = useState([]);\r\n  const [bloqueado, setBloqueado] = useState(true);\r\n  const [mensaje, setMensaje] = useState(\"Haz clic en 'Iniciar' para comenzar\");\r\n\r\n  const iniciarJuego = () => {\r\n    const nuevoColor = colores[Math.floor(Math.random() * colores.length)];\r\n    setSecuencia([nuevoColor]);\r\n    setJugador([]);\r\n    setBloqueado(true);\r\n    setMensaje(\"Observa la secuencia...\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (secuencia.length > 0) {\r\n      setBloqueado(true);\r\n      let i = 0;\r\n      const intervalo = setInterval(() => {\r\n        iluminar(secuencia[i]);\r\n        i++;\r\n        if (i >= secuencia.length) {\r\n          clearInterval(intervalo);\r\n          setBloqueado(false);\r\n          setMensaje(\"Tu turno üé®\");\r\n        }\r\n      }, 800);\r\n    }\r\n  }, [secuencia]);\r\n\r\n  const iluminar = (color) => {\r\n    const el = document.getElementById(color);\r\n    if (el) {\r\n      el.style.opacity = 1;\r\n      setTimeout(() => (el.style.opacity = 0.6), 400);\r\n    }\r\n  };\r\n\r\n  const manejarColor = (color) => {\r\n    if (bloqueado) return;\r\n    iluminar(color);\r\n    const nuevoJugador = [...jugador, color];\r\n    setJugador(nuevoJugador);\r\n\r\n    for (let i = 0; i < nuevoJugador.length; i++) {\r\n      if (nuevoJugador[i] !== secuencia[i]) {\r\n        setMensaje(\"‚ùå Incorrecto. Intenta de nuevo.\");\r\n        setSecuencia([]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (nuevoJugador.length === secuencia.length) {\r\n      setMensaje(\"‚úÖ ¬°Bien hecho! A√±adiendo un nuevo color...\");\r\n      setTimeout(() => {\r\n        const nuevo = colores[Math.floor(Math.random() * colores.length)];\r\n        setSecuencia([...secuencia, nuevo]);\r\n        setJugador([]);\r\n        setBloqueado(true);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"actividad-sensorial\">\r\n      <h2>üé∂ Sinfon√≠a de Colores</h2>\r\n      <p>{mensaje}</p>\r\n\r\n      <div className=\"colores-grid\">\r\n        {colores.map((c) => (\r\n          <div\r\n            key={c}\r\n            id={c}\r\n            className=\"color-boton\"\r\n            style={{ backgroundColor: c, opacity: 0.6 }}\r\n            onClick={() => manejarColor(c)}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"boton-actividad\" onClick={iniciarJuego}>\r\n        Iniciar\r\n      </button>\r\n      <button className=\"boton-volver\" onClick={volver}>\r\n        ‚Üê Volver al m√≥dulo Sensorial\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
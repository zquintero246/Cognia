{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { optionsReducer } from './optionsSlice';\nimport { tooltipReducer } from './tooltipSlice';\nimport { chartDataReducer } from './chartDataSlice';\nimport { chartLayoutReducer } from './layoutSlice';\nimport { mouseClickMiddleware, mouseMoveMiddleware } from './mouseEventsMiddleware';\nimport { reduxDevtoolsJsonStringifyReplacer } from './reduxDevtoolsJsonStringifyReplacer';\nimport { cartesianAxisReducer } from './cartesianAxisSlice';\nimport { graphicalItemsReducer } from './graphicalItemsSlice';\nimport { referenceElementsReducer } from './referenceElementsSlice';\nimport { brushReducer } from './brushSlice';\nimport { legendReducer } from './legendSlice';\nimport { rootPropsReducer } from './rootPropsSlice';\nimport { polarAxisReducer } from './polarAxisSlice';\nimport { polarOptionsReducer } from './polarOptionsSlice';\nimport { keyboardEventsMiddleware } from './keyboardEventsMiddleware';\nimport { externalEventsMiddleware } from './externalEventsMiddleware';\nimport { touchEventMiddleware } from './touchEventsMiddleware';\nimport { errorBarReducer } from './errorBarSlice';\nimport { Global } from '../util/Global';\nvar rootReducer = combineReducers({\n  brush: brushReducer,\n  cartesianAxis: cartesianAxisReducer,\n  chartData: chartDataReducer,\n  errorBars: errorBarReducer,\n  graphicalItems: graphicalItemsReducer,\n  layout: chartLayoutReducer,\n  legend: legendReducer,\n  options: optionsReducer,\n  polarAxis: polarAxisReducer,\n  polarOptions: polarOptionsReducer,\n  referenceElements: referenceElementsReducer,\n  rootProps: rootPropsReducer,\n  tooltip: tooltipReducer\n});\nexport var createRechartsStore = function createRechartsStore(preloadedState) {\n  var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Chart';\n  return configureStore({\n    reducer: rootReducer,\n    // redux-toolkit v1 types are unhappy with the preloadedState type. Remove the `as any` when bumping to v2\n    preloadedState: preloadedState,\n    // @ts-expect-error redux-toolkit v1 types are unhappy with the middleware array. Remove this comment when bumping to v2\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat([mouseClickMiddleware.middleware, mouseMoveMiddleware.middleware, keyboardEventsMiddleware.middleware, externalEventsMiddleware.middleware, touchEventMiddleware.middleware]),\n    devTools: Global.devToolsEnabled && {\n      serialize: {\n        replacer: reduxDevtoolsJsonStringifyReplacer\n      },\n      name: \"recharts-\".concat(chartName)\n    }\n  });\n};","map":{"version":3,"names":["combineReducers","configureStore","optionsReducer","tooltipReducer","chartDataReducer","chartLayoutReducer","mouseClickMiddleware","mouseMoveMiddleware","reduxDevtoolsJsonStringifyReplacer","cartesianAxisReducer","graphicalItemsReducer","referenceElementsReducer","brushReducer","legendReducer","rootPropsReducer","polarAxisReducer","polarOptionsReducer","keyboardEventsMiddleware","externalEventsMiddleware","touchEventMiddleware","errorBarReducer","Global","rootReducer","brush","cartesianAxis","chartData","errorBars","graphicalItems","layout","legend","options","polarAxis","polarOptions","referenceElements","rootProps","tooltip","createRechartsStore","preloadedState","chartName","arguments","length","undefined","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","devTools","devToolsEnabled","serialize","replacer","name"],"sources":["C:/yo/personal/Proyectos/CognIA Hackaton UNAB 2025/node_modules/recharts/es6/state/store.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { optionsReducer } from './optionsSlice';\nimport { tooltipReducer } from './tooltipSlice';\nimport { chartDataReducer } from './chartDataSlice';\nimport { chartLayoutReducer } from './layoutSlice';\nimport { mouseClickMiddleware, mouseMoveMiddleware } from './mouseEventsMiddleware';\nimport { reduxDevtoolsJsonStringifyReplacer } from './reduxDevtoolsJsonStringifyReplacer';\nimport { cartesianAxisReducer } from './cartesianAxisSlice';\nimport { graphicalItemsReducer } from './graphicalItemsSlice';\nimport { referenceElementsReducer } from './referenceElementsSlice';\nimport { brushReducer } from './brushSlice';\nimport { legendReducer } from './legendSlice';\nimport { rootPropsReducer } from './rootPropsSlice';\nimport { polarAxisReducer } from './polarAxisSlice';\nimport { polarOptionsReducer } from './polarOptionsSlice';\nimport { keyboardEventsMiddleware } from './keyboardEventsMiddleware';\nimport { externalEventsMiddleware } from './externalEventsMiddleware';\nimport { touchEventMiddleware } from './touchEventsMiddleware';\nimport { errorBarReducer } from './errorBarSlice';\nimport { Global } from '../util/Global';\nvar rootReducer = combineReducers({\n  brush: brushReducer,\n  cartesianAxis: cartesianAxisReducer,\n  chartData: chartDataReducer,\n  errorBars: errorBarReducer,\n  graphicalItems: graphicalItemsReducer,\n  layout: chartLayoutReducer,\n  legend: legendReducer,\n  options: optionsReducer,\n  polarAxis: polarAxisReducer,\n  polarOptions: polarOptionsReducer,\n  referenceElements: referenceElementsReducer,\n  rootProps: rootPropsReducer,\n  tooltip: tooltipReducer\n});\nexport var createRechartsStore = function createRechartsStore(preloadedState) {\n  var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Chart';\n  return configureStore({\n    reducer: rootReducer,\n    // redux-toolkit v1 types are unhappy with the preloadedState type. Remove the `as any` when bumping to v2\n    preloadedState: preloadedState,\n    // @ts-expect-error redux-toolkit v1 types are unhappy with the middleware array. Remove this comment when bumping to v2\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat([mouseClickMiddleware.middleware, mouseMoveMiddleware.middleware, keyboardEventsMiddleware.middleware, externalEventsMiddleware.middleware, touchEventMiddleware.middleware]),\n    devTools: Global.devToolsEnabled && {\n      serialize: {\n        replacer: reduxDevtoolsJsonStringifyReplacer\n      },\n      name: \"recharts-\".concat(chartName)\n    }\n  });\n};"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,oBAAoB,EAAEC,mBAAmB,QAAQ,yBAAyB;AACnF,SAASC,kCAAkC,QAAQ,sCAAsC;AACzF,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,wBAAwB,QAAQ,0BAA0B;AACnE,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,IAAIC,WAAW,GAAGtB,eAAe,CAAC;EAChCuB,KAAK,EAAEX,YAAY;EACnBY,aAAa,EAAEf,oBAAoB;EACnCgB,SAAS,EAAErB,gBAAgB;EAC3BsB,SAAS,EAAEN,eAAe;EAC1BO,cAAc,EAAEjB,qBAAqB;EACrCkB,MAAM,EAAEvB,kBAAkB;EAC1BwB,MAAM,EAAEhB,aAAa;EACrBiB,OAAO,EAAE5B,cAAc;EACvB6B,SAAS,EAAEhB,gBAAgB;EAC3BiB,YAAY,EAAEhB,mBAAmB;EACjCiB,iBAAiB,EAAEtB,wBAAwB;EAC3CuB,SAAS,EAAEpB,gBAAgB;EAC3BqB,OAAO,EAAEhC;AACX,CAAC,CAAC;AACF,OAAO,IAAIiC,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,cAAc,EAAE;EAC5E,IAAIC,SAAS,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO;EAC3F,OAAOtC,cAAc,CAAC;IACpByC,OAAO,EAAEpB,WAAW;IACpB;IACAe,cAAc,EAAEA,cAAc;IAC9B;IACAM,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,CAAC;MACvDC,iBAAiB,EAAE;IACrB,CAAC,CAAC,CAACC,MAAM,CAAC,CAACxC,oBAAoB,CAACqC,UAAU,EAAEpC,mBAAmB,CAACoC,UAAU,EAAE1B,wBAAwB,CAAC0B,UAAU,EAAEzB,wBAAwB,CAACyB,UAAU,EAAExB,oBAAoB,CAACwB,UAAU,CAAC,CAAC;IACvLI,QAAQ,EAAE1B,MAAM,CAAC2B,eAAe,IAAI;MAClCC,SAAS,EAAE;QACTC,QAAQ,EAAE1C;MACZ,CAAC;MACD2C,IAAI,EAAE,WAAW,CAACL,MAAM,CAACR,SAAS;IACpC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\yo\\\\personal\\\\Proyectos\\\\CognIA Hackaton UNAB 2025\\\\neuro-link\\\\src\\\\modules\\\\Tecnico\\\\PasoAPaso.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./PasoAPaso.css\";\n\n/*\r\n  PasoAPaso.jsx (mejorado)\r\n  Props:\r\n    - volver: función opcional para volver al menú\r\n    - dificultad: \"facil\" | \"normal\" | \"dificil\" (default: \"normal\")\r\n    - onResult: función opcional(result) donde result = {\r\n        processId, difficulty, attempts, hintsUsed, timeSpentMs, success\r\n      }\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROCESSES = [/* (mismos procesos que ya tenías) */\n{\n  id: \"cepillarse\",\n  title: \"Cepillarse los dientes\",\n  description: \"Rutina de higiene dental con pasos simples y útiles para mantener la boca limpia.\",\n  steps: [\"Mojar el cepillo de dientes\", \"Poner una pequeña cantidad de pasta dental\", \"Cepillar los dientes delanteros y traseros\", \"Cepillar la lengua suavemente\", \"Enjuagarse la boca y guardar el cepillo\"],\n  explain: [\"Mojar el cepillo ayuda a preparar las cerdas.\", \"Una cantidad pequeña de pasta es suficiente para limpiar bien.\", \"Cepillar los dientes delanteros y traseros elimina la placa bacteriana.\", \"La lengua acumula bacterias; cepillarla ayuda a mantener el aliento fresco.\", \"Enjuagarse y guardar el cepillo evita contaminación.\"]\n}, {\n  id: \"germinacion\",\n  title: \"Germinación de una semilla\",\n  description: \"Aprende cómo una semilla se convierte en una planta. Fomenta la paciencia y la observación.\",\n  steps: [\"Llenar una maceta con tierra suelta\", \"Colocar la semilla a la profundidad adecuada\", \"Regar ligeramente la tierra\", \"Poner la maceta en un lugar con luz indirecta\", \"Observar cada día su crecimiento\"],\n  explain: [\"La tierra sostiene y alimenta la semilla.\", \"Enterrarla a la profundidad adecuada ayuda a protegerla.\", \"El agua activa el proceso de germinación.\", \"La luz suave favorece el crecimiento sin dañar la semilla.\", \"Observar el proceso enseña sobre el tiempo y el cuidado.\"]\n}, {\n  id: \"lavarse\",\n  title: \"Lavarse las manos correctamente\",\n  description: \"Aprende a lavarte las manos correctamente para cuidar tu salud.\",\n  steps: [\"Mojar las manos con agua\", \"Aplicar jabón en las palmas\", \"Frotar todas las partes de las manos durante 20 segundos\", \"Enjuagar con agua limpia\", \"Secar con una toalla limpia o al aire\"],\n  explain: [\"El agua ayuda a remover la suciedad inicial.\", \"El jabón atrapa los gérmenes y la grasa.\", \"Frotar durante 20 segundos asegura eliminar bacterias.\", \"Enjuagar limpia completamente los residuos de jabón.\", \"Secar evita recontaminación por superficies húmedas.\"]\n}, {\n  id: \"hervir\",\n  title: \"Hervir agua (con supervisión)\",\n  description: \"Aprende cómo hervir agua con seguridad y observar el cambio de estado.\",\n  steps: [\"Llenar la olla con agua\", \"Colocar la olla sobre la estufa\", \"Encender la estufa con cuidado\", \"Esperar hasta que el agua hierva\", \"Apagar la estufa y retirar la olla\"],\n  explain: [\"Medir el agua evita derrames.\", \"Colocar la olla correctamente previene accidentes.\", \"Encender con cuidado enseña sobre seguridad.\", \"El hervor muestra el cambio de líquido a vapor.\", \"Apagar y retirar con cuidado previene quemaduras.\"]\n}, {\n  id: \"sandwich\",\n  title: \"Preparar un sándwich\",\n  description: \"Aprende a preparar un sándwich paso a paso, fomentando independencia y motricidad.\",\n  steps: [\"Lavar tus manos antes de cocinar\", \"Colocar dos rebanadas de pan sobre la mesa\", \"Poner el relleno (queso, jamón o vegetal)\", \"Tapar con la otra rebanada\", \"Servir y limpiar la mesa\"],\n  explain: [\"Lavar las manos evita contaminación.\", \"Preparar los ingredientes enseña orden y anticipación.\", \"Agregar el relleno desarrolla coordinación fina.\", \"Tapar completa la tarea visualmente.\", \"Limpiar refuerza la responsabilidad después de cocinar.\"]\n}];\nfunction shuffle(array) {\n  const copy = [...array];\n  for (let i = copy.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n  }\n  return copy;\n}\nexport default function PasoAPaso({\n  volver,\n  dificultad = \"normal\",\n  onResult\n}) {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [shuffledItems, setShuffledItems] = useState([]); // {id, text, correctIndex|null}\n  const [selected, setSelected] = useState([]); // array of items\n  const [feedback, setFeedback] = useState(\"\");\n  const [showExplain, setShowExplain] = useState(false);\n  const [usedIds, setUsedIds] = useState(new Set());\n  const [attempts, setAttempts] = useState(0);\n  const [hintsUsed, setHintsUsed] = useState(0);\n  const startRef = useRef(null);\n  const successRef = useRef(false);\n  const process = PROCESSES[index];\n\n  // calcula la secuencia correcta según dificultad\n  function getCorrectSequence(proc, nivel) {\n    const total = proc.steps.length;\n    if (nivel === \"facil\") {\n      // tomamos primeros 3 pasos o menos si el proceso es corto\n      const n = Math.max(2, Math.min(3, total));\n      return proc.steps.slice(0, n);\n    }\n    // normal -> todos los pasos\n    if (nivel === \"normal\") return proc.steps.slice();\n    // dificil -> todos los pasos (pero luego añadimos decoys)\n    return proc.steps.slice();\n  }\n\n  // crea el banco de botones (correctos + decoys opcionales)\n  function buildItems(proc, nivel) {\n    const correctSeq = getCorrectSequence(proc, nivel);\n    let items = correctSeq.map((text, i) => ({\n      id: `c-${i}`,\n      text,\n      correctIndex: i\n    }));\n\n    // para dificil, añadimos 1-2 decoys tomados de otros procesos\n    if (nivel === \"dificil\") {\n      const decoyPool = PROCESSES.flatMap(p => p.steps).filter(s => !proc.steps.includes(s));\n      const decoysNeeded = Math.min(2, Math.max(1, Math.floor(correctSeq.length / 3)));\n      const chosen = shuffle(decoyPool).slice(0, decoysNeeded);\n      const decoyItems = chosen.map((t, i) => ({\n        id: `d-${i}`,\n        text: t,\n        correctIndex: null\n      }));\n      items = items.concat(decoyItems);\n    }\n    return shuffle(items);\n  }\n\n  // reinicia proceso -> reconstruye items y métricas\n  const resetProcess = () => {\n    const items = buildItems(process, dificultad);\n    setShuffledItems(items);\n    setSelected([]);\n    setUsedIds(new Set());\n    setFeedback(\"\");\n    setShowExplain(false);\n    setAttempts(0);\n    setHintsUsed(0);\n    successRef.current = false;\n    startRef.current = Date.now();\n  };\n  useEffect(() => {\n    resetProcess();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [index, dificultad]);\n\n  // cuantos pasos correctos se esperan\n  const correctSequence = getCorrectSequence(process, dificultad);\n  const pickStep = item => {\n    if (successRef.current) return;\n    if (usedIds.has(item.id)) return;\n    // limitar selección al número de pasos correctos (reduce confusión)\n    if (selected.length >= correctSequence.length) {\n      setFeedback(\"Has seleccionado el número máximo de pasos. Quita uno si quieres cambiar.\");\n      return;\n    }\n    setSelected(prev => [...prev, item]);\n    setUsedIds(prev => {\n      const n = new Set(prev);\n      n.add(item.id);\n      return n;\n    });\n    setFeedback(\"\");\n  };\n  const removeStep = pos => {\n    if (successRef.current) return;\n    const removed = selected[pos];\n    const newSel = selected.filter((_, i) => i !== pos);\n    setSelected(newSel);\n    setUsedIds(prev => {\n      const n = new Set(prev);\n      if (removed) n.delete(removed.id);\n      return n;\n    });\n    setFeedback(\"\");\n  };\n\n  // dar una pista: seleccionar automáticamente el siguiente paso correcto\n  const giveHint = () => {\n    if (successRef.current) return;\n    const nextIndex = selected.length; // índice de siguiente paso requerido\n    if (nextIndex >= correctSequence.length) {\n      setFeedback(\"Ya seleccionaste todos los pasos requeridos.\");\n      return;\n    }\n    const nextText = correctSequence[nextIndex];\n    const item = shuffledItems.find(it => it.text === nextText && !usedIds.has(it.id));\n    if (item) {\n      setSelected(prev => [...prev, item]);\n      setUsedIds(prev => {\n        const n = new Set(prev);\n        n.add(item.id);\n        return n;\n      });\n      setHintsUsed(h => h + 1);\n      setFeedback(\"Pista aplicada: se seleccionó el siguiente paso correcto.\");\n    } else {\n      setFeedback(\"No se pudo encontrar la pista (intenta mezclar).\");\n    }\n  };\n  const shuffleUnselected = () => {\n    // mantiene los seleccionados, reordena los demás\n    const selectedIds = selected.map(s => s.id);\n    const unselected = shuffledItems.filter(it => !selectedIds.includes(it.id));\n    const newOrder = shuffle(unselected).concat(shuffledItems.filter(it => selectedIds.includes(it.id)));\n    setShuffledItems(newOrder);\n  };\n  const validate = () => {\n    if (selected.length < correctSequence.length) {\n      setFeedback(\"Debes seleccionar todos los pasos requeridos antes de validar.\");\n      return;\n    }\n    setAttempts(a => a + 1);\n    // comprobar que los pasos seleccionados (en orden) coinciden con la secuencia correcta\n    let ok = true;\n    for (let i = 0; i < correctSequence.length; i++) {\n      if (!selected[i] || selected[i].text !== correctSequence[i]) {\n        ok = false;\n        break;\n      }\n    }\n    const timeSpentMs = Date.now() - (startRef.current || Date.now());\n    if (ok) {\n      setFeedback(\"¡Excelente! Los pasos están en orden correcto.\");\n      successRef.current = true;\n      setShowExplain(true);\n      // hablar feedback\n      if (typeof window !== \"undefined\" && window.speechSynthesis) {\n        const voice = new SpeechSynthesisUtterance(\"¡Muy bien! Lo lograste.\");\n        voice.lang = \"es-ES\";\n        window.speechSynthesis.cancel();\n        window.speechSynthesis.speak(voice);\n      }\n      // resultado para IA/backend\n      if (typeof onResult === \"function\") {\n        onResult({\n          processId: process.id,\n          difficulty: dificultad,\n          attempts: attempts + 1,\n          hintsUsed,\n          timeSpentMs,\n          success: true\n        });\n      }\n    } else {\n      setFeedback(\"Algunos pasos no están en orden. Intenta de nuevo.\");\n      // reporte parcial\n      if (typeof onResult === \"function\") {\n        onResult({\n          processId: process.id,\n          difficulty: dificultad,\n          attempts: attempts + 1,\n          hintsUsed,\n          timeSpentMs,\n          success: false\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paso-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: process.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: process.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paso-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Variaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: index,\n        onChange: e => setIndex(parseInt(e.target.value, 10)),\n        children: PROCESSES.map((p, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: p.title\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Dificultad: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dificultad,\n        onChange: e => {\n          // si la dificultad viene de props (inmutable), esta línea no la cambiará.\n          // Se incluye para debug local; en integración real la dificultad la pasa la IA.\n          // eslint-disable-next-line no-console\n          console.warn(\"Para cambiar dificultad de forma permanente, pásala via prop 'dificultad' desde el padre.\");\n        },\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          children: dificultad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetProcess,\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffleUnselected,\n        children: \"Mezclar no seleccionados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: giveHint,\n        children: \"Pista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paso-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paso-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pasos disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chips\",\n          children: shuffledItems.map(it => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => pickStep(it),\n            disabled: usedIds.has(it.id) || successRef.current,\n            className: `chip ${usedIds.has(it.id) ? \"chip-used\" : \"\"}`,\n            \"aria-pressed\": usedIds.has(it.id),\n            children: it.text\n          }, it.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: 8,\n            fontSize: 14,\n            color: \"#666\"\n          },\n          children: [\"Selecciona \", correctSequence.length, \" pasos en orden.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paso-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tu orden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: selected.map((it, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-step\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [i + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), \" \", it.text, !successRef.current && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeStep(i),\n                children: \"\\u2716\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, it.id + \"-\" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 8,\n            marginTop: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: validate,\n            children: \"Validar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetProcess,\n            children: \"Limpiar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback\",\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10,\n            fontSize: 13,\n            color: \"#444\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Intentos: \", attempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Pistas usadas: \", hintsUsed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), successRef.current && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowExplain(s => !s),\n          children: showExplain ? \"Ocultar explicación\" : \"Ver explicación\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), volver && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"volver-btn\",\n          onClick: volver,\n          children: \"\\u2190 Volver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), showExplain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"explain-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Explicaci\\xF3n de los pasos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: correctSequence.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [s, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), \" \", process.explain[i]]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n}\n_s(PasoAPaso, \"2zavWns8UMkkMi8xh16nWeqz4W0=\");\n_c = PasoAPaso;\nvar _c;\n$RefreshReg$(_c, \"PasoAPaso\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","PROCESSES","id","title","description","steps","explain","shuffle","array","copy","i","length","j","Math","floor","random","PasoAPaso","volver","dificultad","onResult","_s","index","setIndex","shuffledItems","setShuffledItems","selected","setSelected","feedback","setFeedback","showExplain","setShowExplain","usedIds","setUsedIds","Set","attempts","setAttempts","hintsUsed","setHintsUsed","startRef","successRef","process","getCorrectSequence","proc","nivel","total","n","max","min","slice","buildItems","correctSeq","items","map","text","correctIndex","decoyPool","flatMap","p","filter","s","includes","decoysNeeded","chosen","decoyItems","t","concat","resetProcess","current","Date","now","correctSequence","pickStep","item","has","prev","add","removeStep","pos","removed","newSel","_","delete","giveHint","nextIndex","nextText","find","it","h","shuffleUnselected","selectedIds","unselected","newOrder","validate","a","ok","timeSpentMs","window","speechSynthesis","voice","SpeechSynthesisUtterance","lang","cancel","speak","processId","difficulty","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","console","warn","disabled","onClick","style","marginTop","fontSize","color","display","gap","_c","$RefreshReg$"],"sources":["C:/yo/personal/Proyectos/CognIA Hackaton UNAB 2025/neuro-link/src/modules/Tecnico/PasoAPaso.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./PasoAPaso.css\";\r\n\r\n/*\r\n  PasoAPaso.jsx (mejorado)\r\n  Props:\r\n    - volver: función opcional para volver al menú\r\n    - dificultad: \"facil\" | \"normal\" | \"dificil\" (default: \"normal\")\r\n    - onResult: función opcional(result) donde result = {\r\n        processId, difficulty, attempts, hintsUsed, timeSpentMs, success\r\n      }\r\n*/\r\n\r\nconst PROCESSES = [\r\n  /* (mismos procesos que ya tenías) */\r\n  {\r\n    id: \"cepillarse\",\r\n    title: \"Cepillarse los dientes\",\r\n    description:\r\n      \"Rutina de higiene dental con pasos simples y útiles para mantener la boca limpia.\",\r\n    steps: [\r\n      \"Mojar el cepillo de dientes\",\r\n      \"Poner una pequeña cantidad de pasta dental\",\r\n      \"Cepillar los dientes delanteros y traseros\",\r\n      \"Cepillar la lengua suavemente\",\r\n      \"Enjuagarse la boca y guardar el cepillo\"\r\n    ],\r\n    explain: [\r\n      \"Mojar el cepillo ayuda a preparar las cerdas.\",\r\n      \"Una cantidad pequeña de pasta es suficiente para limpiar bien.\",\r\n      \"Cepillar los dientes delanteros y traseros elimina la placa bacteriana.\",\r\n      \"La lengua acumula bacterias; cepillarla ayuda a mantener el aliento fresco.\",\r\n      \"Enjuagarse y guardar el cepillo evita contaminación.\"\r\n    ]\r\n  },\r\n  {\r\n    id: \"germinacion\",\r\n    title: \"Germinación de una semilla\",\r\n    description:\r\n      \"Aprende cómo una semilla se convierte en una planta. Fomenta la paciencia y la observación.\",\r\n    steps: [\r\n      \"Llenar una maceta con tierra suelta\",\r\n      \"Colocar la semilla a la profundidad adecuada\",\r\n      \"Regar ligeramente la tierra\",\r\n      \"Poner la maceta en un lugar con luz indirecta\",\r\n      \"Observar cada día su crecimiento\"\r\n    ],\r\n    explain: [\r\n      \"La tierra sostiene y alimenta la semilla.\",\r\n      \"Enterrarla a la profundidad adecuada ayuda a protegerla.\",\r\n      \"El agua activa el proceso de germinación.\",\r\n      \"La luz suave favorece el crecimiento sin dañar la semilla.\",\r\n      \"Observar el proceso enseña sobre el tiempo y el cuidado.\"\r\n    ]\r\n  },\r\n  {\r\n    id: \"lavarse\",\r\n    title: \"Lavarse las manos correctamente\",\r\n    description:\r\n      \"Aprende a lavarte las manos correctamente para cuidar tu salud.\",\r\n    steps: [\r\n      \"Mojar las manos con agua\",\r\n      \"Aplicar jabón en las palmas\",\r\n      \"Frotar todas las partes de las manos durante 20 segundos\",\r\n      \"Enjuagar con agua limpia\",\r\n      \"Secar con una toalla limpia o al aire\"\r\n    ],\r\n    explain: [\r\n      \"El agua ayuda a remover la suciedad inicial.\",\r\n      \"El jabón atrapa los gérmenes y la grasa.\",\r\n      \"Frotar durante 20 segundos asegura eliminar bacterias.\",\r\n      \"Enjuagar limpia completamente los residuos de jabón.\",\r\n      \"Secar evita recontaminación por superficies húmedas.\"\r\n    ]\r\n  },\r\n  {\r\n    id: \"hervir\",\r\n    title: \"Hervir agua (con supervisión)\",\r\n    description:\r\n      \"Aprende cómo hervir agua con seguridad y observar el cambio de estado.\",\r\n    steps: [\r\n      \"Llenar la olla con agua\",\r\n      \"Colocar la olla sobre la estufa\",\r\n      \"Encender la estufa con cuidado\",\r\n      \"Esperar hasta que el agua hierva\",\r\n      \"Apagar la estufa y retirar la olla\"\r\n    ],\r\n    explain: [\r\n      \"Medir el agua evita derrames.\",\r\n      \"Colocar la olla correctamente previene accidentes.\",\r\n      \"Encender con cuidado enseña sobre seguridad.\",\r\n      \"El hervor muestra el cambio de líquido a vapor.\",\r\n      \"Apagar y retirar con cuidado previene quemaduras.\"\r\n    ]\r\n  },\r\n  {\r\n    id: \"sandwich\",\r\n    title: \"Preparar un sándwich\",\r\n    description:\r\n      \"Aprende a preparar un sándwich paso a paso, fomentando independencia y motricidad.\",\r\n    steps: [\r\n      \"Lavar tus manos antes de cocinar\",\r\n      \"Colocar dos rebanadas de pan sobre la mesa\",\r\n      \"Poner el relleno (queso, jamón o vegetal)\",\r\n      \"Tapar con la otra rebanada\",\r\n      \"Servir y limpiar la mesa\"\r\n    ],\r\n    explain: [\r\n      \"Lavar las manos evita contaminación.\",\r\n      \"Preparar los ingredientes enseña orden y anticipación.\",\r\n      \"Agregar el relleno desarrolla coordinación fina.\",\r\n      \"Tapar completa la tarea visualmente.\",\r\n      \"Limpiar refuerza la responsabilidad después de cocinar.\"\r\n    ]\r\n  }\r\n];\r\n\r\nfunction shuffle(array) {\r\n  const copy = [...array];\r\n  for (let i = copy.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [copy[i], copy[j]] = [copy[j], copy[i]];\r\n  }\r\n  return copy;\r\n}\r\n\r\nexport default function PasoAPaso({ volver, dificultad = \"normal\", onResult }) {\r\n  const [index, setIndex] = useState(0);\r\n  const [shuffledItems, setShuffledItems] = useState([]); // {id, text, correctIndex|null}\r\n  const [selected, setSelected] = useState([]); // array of items\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [showExplain, setShowExplain] = useState(false);\r\n  const [usedIds, setUsedIds] = useState(new Set());\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [hintsUsed, setHintsUsed] = useState(0);\r\n  const startRef = useRef(null);\r\n  const successRef = useRef(false);\r\n\r\n  const process = PROCESSES[index];\r\n\r\n  // calcula la secuencia correcta según dificultad\r\n  function getCorrectSequence(proc, nivel) {\r\n    const total = proc.steps.length;\r\n    if (nivel === \"facil\") {\r\n      // tomamos primeros 3 pasos o menos si el proceso es corto\r\n      const n = Math.max(2, Math.min(3, total));\r\n      return proc.steps.slice(0, n);\r\n    }\r\n    // normal -> todos los pasos\r\n    if (nivel === \"normal\") return proc.steps.slice();\r\n    // dificil -> todos los pasos (pero luego añadimos decoys)\r\n    return proc.steps.slice();\r\n  }\r\n\r\n  // crea el banco de botones (correctos + decoys opcionales)\r\n  function buildItems(proc, nivel) {\r\n    const correctSeq = getCorrectSequence(proc, nivel);\r\n    let items = correctSeq.map((text, i) => ({\r\n      id: `c-${i}`,\r\n      text,\r\n      correctIndex: i\r\n    }));\r\n\r\n    // para dificil, añadimos 1-2 decoys tomados de otros procesos\r\n    if (nivel === \"dificil\") {\r\n      const decoyPool = PROCESSES.flatMap((p) => p.steps).filter(\r\n        (s) => !proc.steps.includes(s)\r\n      );\r\n      const decoysNeeded = Math.min(2, Math.max(1, Math.floor(correctSeq.length / 3)));\r\n      const chosen = shuffle(decoyPool).slice(0, decoysNeeded);\r\n      const decoyItems = chosen.map((t, i) => ({\r\n        id: `d-${i}`,\r\n        text: t,\r\n        correctIndex: null\r\n      }));\r\n      items = items.concat(decoyItems);\r\n    }\r\n\r\n    return shuffle(items);\r\n  }\r\n\r\n  // reinicia proceso -> reconstruye items y métricas\r\n  const resetProcess = () => {\r\n    const items = buildItems(process, dificultad);\r\n    setShuffledItems(items);\r\n    setSelected([]);\r\n    setUsedIds(new Set());\r\n    setFeedback(\"\");\r\n    setShowExplain(false);\r\n    setAttempts(0);\r\n    setHintsUsed(0);\r\n    successRef.current = false;\r\n    startRef.current = Date.now();\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetProcess();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [index, dificultad]);\r\n\r\n  // cuantos pasos correctos se esperan\r\n  const correctSequence = getCorrectSequence(process, dificultad);\r\n\r\n  const pickStep = (item) => {\r\n    if (successRef.current) return;\r\n    if (usedIds.has(item.id)) return;\r\n    // limitar selección al número de pasos correctos (reduce confusión)\r\n    if (selected.length >= correctSequence.length) {\r\n      setFeedback(\"Has seleccionado el número máximo de pasos. Quita uno si quieres cambiar.\");\r\n      return;\r\n    }\r\n    setSelected((prev) => [...prev, item]);\r\n    setUsedIds((prev) => {\r\n      const n = new Set(prev);\r\n      n.add(item.id);\r\n      return n;\r\n    });\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  const removeStep = (pos) => {\r\n    if (successRef.current) return;\r\n    const removed = selected[pos];\r\n    const newSel = selected.filter((_, i) => i !== pos);\r\n    setSelected(newSel);\r\n    setUsedIds((prev) => {\r\n      const n = new Set(prev);\r\n      if (removed) n.delete(removed.id);\r\n      return n;\r\n    });\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  // dar una pista: seleccionar automáticamente el siguiente paso correcto\r\n  const giveHint = () => {\r\n    if (successRef.current) return;\r\n    const nextIndex = selected.length; // índice de siguiente paso requerido\r\n    if (nextIndex >= correctSequence.length) {\r\n      setFeedback(\"Ya seleccionaste todos los pasos requeridos.\");\r\n      return;\r\n    }\r\n    const nextText = correctSequence[nextIndex];\r\n    const item = shuffledItems.find((it) => it.text === nextText && !usedIds.has(it.id));\r\n    if (item) {\r\n      setSelected((prev) => [...prev, item]);\r\n      setUsedIds((prev) => {\r\n        const n = new Set(prev);\r\n        n.add(item.id);\r\n        return n;\r\n      });\r\n      setHintsUsed((h) => h + 1);\r\n      setFeedback(\"Pista aplicada: se seleccionó el siguiente paso correcto.\");\r\n    } else {\r\n      setFeedback(\"No se pudo encontrar la pista (intenta mezclar).\");\r\n    }\r\n  };\r\n\r\n  const shuffleUnselected = () => {\r\n    // mantiene los seleccionados, reordena los demás\r\n    const selectedIds = selected.map((s) => s.id);\r\n    const unselected = shuffledItems.filter((it) => !selectedIds.includes(it.id));\r\n    const newOrder = shuffle(unselected).concat(shuffledItems.filter((it) => selectedIds.includes(it.id)));\r\n    setShuffledItems(newOrder);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (selected.length < correctSequence.length) {\r\n      setFeedback(\"Debes seleccionar todos los pasos requeridos antes de validar.\");\r\n      return;\r\n    }\r\n    setAttempts((a) => a + 1);\r\n    // comprobar que los pasos seleccionados (en orden) coinciden con la secuencia correcta\r\n    let ok = true;\r\n    for (let i = 0; i < correctSequence.length; i++) {\r\n      if (!selected[i] || selected[i].text !== correctSequence[i]) {\r\n        ok = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const timeSpentMs = Date.now() - (startRef.current || Date.now());\r\n\r\n    if (ok) {\r\n      setFeedback(\"¡Excelente! Los pasos están en orden correcto.\");\r\n      successRef.current = true;\r\n      setShowExplain(true);\r\n      // hablar feedback\r\n      if (typeof window !== \"undefined\" && window.speechSynthesis) {\r\n        const voice = new SpeechSynthesisUtterance(\"¡Muy bien! Lo lograste.\");\r\n        voice.lang = \"es-ES\";\r\n        window.speechSynthesis.cancel();\r\n        window.speechSynthesis.speak(voice);\r\n      }\r\n      // resultado para IA/backend\r\n      if (typeof onResult === \"function\") {\r\n        onResult({\r\n          processId: process.id,\r\n          difficulty: dificultad,\r\n          attempts: attempts + 1,\r\n          hintsUsed,\r\n          timeSpentMs,\r\n          success: true\r\n        });\r\n      }\r\n    } else {\r\n      setFeedback(\"Algunos pasos no están en orden. Intenta de nuevo.\");\r\n      // reporte parcial\r\n      if (typeof onResult === \"function\") {\r\n        onResult({\r\n          processId: process.id,\r\n          difficulty: dificultad,\r\n          attempts: attempts + 1,\r\n          hintsUsed,\r\n          timeSpentMs,\r\n          success: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"paso-container\">\r\n      <h2>{process.title}</h2>\r\n      <p>{process.description}</p>\r\n\r\n      <div className=\"paso-controls\">\r\n        <label>Variación:</label>\r\n        <select value={index} onChange={(e) => setIndex(parseInt(e.target.value, 10))}>\r\n          {PROCESSES.map((p, i) => (\r\n            <option key={p.id} value={i}>\r\n              {p.title}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label> Dificultad: </label>\r\n        <select value={dificultad} onChange={(e) => {\r\n          // si la dificultad viene de props (inmutable), esta línea no la cambiará.\r\n          // Se incluye para debug local; en integración real la dificultad la pasa la IA.\r\n          // eslint-disable-next-line no-console\r\n          console.warn(\"Para cambiar dificultad de forma permanente, pásala via prop 'dificultad' desde el padre.\");\r\n        }} disabled>\r\n          <option>{dificultad}</option>\r\n        </select>\r\n\r\n        <button onClick={resetProcess}>Reiniciar</button>\r\n        <button onClick={shuffleUnselected}>Mezclar no seleccionados</button>\r\n        <button onClick={giveHint}>Pista</button>\r\n      </div>\r\n\r\n      <div className=\"paso-grid\">\r\n        <div className=\"paso-col\">\r\n          <h3>Pasos disponibles</h3>\r\n          <div className=\"chips\">\r\n            {shuffledItems.map((it) => (\r\n              <button\r\n                key={it.id}\r\n                onClick={() => pickStep(it)}\r\n                disabled={usedIds.has(it.id) || successRef.current}\r\n                className={`chip ${usedIds.has(it.id) ? \"chip-used\" : \"\"}`}\r\n                aria-pressed={usedIds.has(it.id)}\r\n              >\r\n                {it.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <p style={{ marginTop: 8, fontSize: 14, color: \"#666\" }}>\r\n            Selecciona {correctSequence.length} pasos en orden.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"paso-col\">\r\n          <h3>Tu orden</h3>\r\n          <ol>\r\n            {selected.map((it, i) => (\r\n              <li key={it.id + \"-\" + i}>\r\n                <div className=\"selected-step\">\r\n                  <span>{i + 1}.</span> {it.text}\r\n                  {!successRef.current && (\r\n                    <button onClick={() => removeStep(i)}>✖</button>\r\n                  )}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n\r\n          <div style={{ display: \"flex\", gap: 8, marginTop: 8 }}>\r\n            <button onClick={validate}>Validar</button>\r\n            <button onClick={resetProcess}>Limpiar</button>\r\n          </div>\r\n\r\n          <p className=\"feedback\">{feedback}</p>\r\n\r\n          <div style={{ marginTop: 10, fontSize: 13, color: \"#444\" }}>\r\n            <div>Intentos: {attempts}</div>\r\n            <div>Pistas usadas: {hintsUsed}</div>\r\n          </div>\r\n\r\n          {successRef.current && (\r\n            <button onClick={() => setShowExplain((s) => !s)}>\r\n              {showExplain ? \"Ocultar explicación\" : \"Ver explicación\"}\r\n            </button>\r\n          )}\r\n\r\n          {volver && (\r\n            <button className=\"volver-btn\" onClick={volver}>\r\n              ← Volver\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showExplain && (\r\n        <div className=\"explain-box\">\r\n          <h3>Explicación de los pasos</h3>\r\n          <ol>\r\n            {correctSequence.map((s, i) => (\r\n              <li key={i}>\r\n                <strong>{s}:</strong> {process.explain[i]}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
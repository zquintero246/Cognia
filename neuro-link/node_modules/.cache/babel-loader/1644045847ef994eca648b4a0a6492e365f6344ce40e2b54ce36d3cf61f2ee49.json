{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabdiel Julian\\\\Downloads\\\\Cognia-dev\\\\neuro-link\\\\src\\\\modules\\\\Cognitivo\\\\MemoriaColores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useRegistroActividad } from \"../../hooks/useRegistroActividad\";\nimport clickSound from \"../../assets/sound/click.mp3\"; // agrega un sonido simple\nimport \"./MemoriaColores.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_COLORS = [{\n  id: \"blue\",\n  hex: \"#A6D8FF\"\n}, {\n  id: \"green\",\n  hex: \"#A8E6CF\"\n}, {\n  id: \"lav\",\n  hex: \"#E9D5FF\"\n}, {\n  id: \"peach\",\n  hex: \"#FFD9B3\"\n}, {\n  id: \"yellow\",\n  hex: \"#FFF9A6\"\n}, {\n  id: \"pink\",\n  hex: \"#FFC0CB\"\n}, {\n  id: \"mint\",\n  hex: \"#B2F2BB\"\n}];\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\nexport default function MemoriaColores({\n  volver\n}) {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [userInput, setUserInput] = useState([]);\n  const [level, setLevel] = useState(1);\n  const [isShowing, setIsShowing] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [message, setMessage] = useState(\"\");\n  const [errorState, setErrorState] = useState(false);\n  const [pressed, setPressed] = useState(null);\n  const [timeStart, setTimeStart] = useState(null);\n  const {\n    registrarExito,\n    registrarFallo\n  } = useRegistroActividad();\n  const click = new Audio(clickSound);\n  useEffect(() => {\n    generateNewSequence(1);\n  }, []);\n  const generateNewSequence = async (lvl = level) => {\n    const colorPool = BASE_COLORS.slice(0, 3 + Math.floor(lvl / 2)); // más colores con nivel\n    const len = Math.min(6, 2 + lvl);\n    const seq = Array.from({\n      length: len\n    }, () => Math.floor(Math.random() * colorPool.length));\n    setSequence(seq);\n    setUserInput([]);\n    setErrorState(false);\n    setMessage(\"Observa la secuencia\");\n    await showSequence(seq);\n  };\n  const showSequence = async seq => {\n    setIsShowing(true);\n    for (let i = 0; i < seq.length; i++) {\n      setActiveIndex(seq[i]);\n      await sleep(700);\n      setActiveIndex(-1);\n      await sleep(300);\n    }\n    setIsShowing(false);\n    setTimeStart(Date.now());\n    setMessage(\"Ahora repite la secuencia\");\n  };\n  const handleColorPress = async colorIndex => {\n    if (isShowing) return;\n    click.play();\n    setPressed(colorIndex);\n    setTimeout(() => setPressed(null), 150);\n    const nextInput = [...userInput, colorIndex];\n    setUserInput(nextInput);\n    const expectedIndex = sequence[nextInput.length - 1];\n    if (colorIndex !== expectedIndex) {\n      setErrorState(true);\n      setMessage(\"❌ Intenta de nuevo\");\n      await finishRound(false);\n      return;\n    }\n    if (nextInput.length === sequence.length) {\n      setMessage(\"✅ ¡Excelente memoria!\");\n      await finishRound(true);\n    }\n  };\n  const finishRound = async success => {\n    if (success) registrarExito(\"Cognitivo\", \"Memoria de Colores\", level);else registrarFallo(\"Cognitivo\", \"Memoria de Colores\", level);\n    if (success) setLevel(l => Math.min(l + 1, 6));else setLevel(l => Math.max(1, l - 1));\n    await sleep(1000);\n    setErrorState(false);\n    await generateNewSequence(success ? level + 1 : level);\n  };\n  const colorPool = BASE_COLORS.slice(0, 3 + Math.floor(level / 2));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memoria-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDFA8 Memoria de Colores \\u2014 Nivel \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"memoria-msg\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `color-grid ${errorState ? \"error\" : \"\"}`,\n      \"aria-hidden\": isShowing,\n      children: colorPool.map((c, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `color-btn ${activeIndex === idx ? \"active\" : \"\"} ${pressed === idx ? \"pressed\" : \"\"}`,\n        style: {\n          background: c.hex\n        },\n        onClick: () => handleColorPress(idx),\n        disabled: isShowing\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"volver-btn\",\n      onClick: volver,\n      children: \"\\u2B05 Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoriaColores, \"J7XuLRzZcpzTNnGX02dsy7OUUao=\", false, function () {\n  return [useRegistroActividad];\n});\n_c = MemoriaColores;\nvar _c;\n$RefreshReg$(_c, \"MemoriaColores\");","map":{"version":3,"names":["React","useEffect","useState","useRegistroActividad","clickSound","jsxDEV","_jsxDEV","BASE_COLORS","id","hex","sleep","ms","Promise","r","setTimeout","MemoriaColores","volver","_s","sequence","setSequence","userInput","setUserInput","level","setLevel","isShowing","setIsShowing","activeIndex","setActiveIndex","message","setMessage","errorState","setErrorState","pressed","setPressed","timeStart","setTimeStart","registrarExito","registrarFallo","click","Audio","generateNewSequence","lvl","colorPool","slice","Math","floor","len","min","seq","Array","from","length","random","showSequence","i","Date","now","handleColorPress","colorIndex","play","nextInput","expectedIndex","finishRound","success","l","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","idx","style","background","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Zabdiel Julian/Downloads/Cognia-dev/neuro-link/src/modules/Cognitivo/MemoriaColores.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRegistroActividad } from \"../../hooks/useRegistroActividad\";\r\nimport clickSound from \"../../assets/sound/click.mp3\"; // agrega un sonido simple\r\nimport \"./MemoriaColores.css\";\r\n\r\nconst BASE_COLORS = [\r\n  { id: \"blue\", hex: \"#A6D8FF\" },\r\n  { id: \"green\", hex: \"#A8E6CF\" },\r\n  { id: \"lav\", hex: \"#E9D5FF\" },\r\n  { id: \"peach\", hex: \"#FFD9B3\" },\r\n  { id: \"yellow\", hex: \"#FFF9A6\" },\r\n  { id: \"pink\", hex: \"#FFC0CB\" },\r\n  { id: \"mint\", hex: \"#B2F2BB\" },\r\n];\r\n\r\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\r\n\r\nexport default function MemoriaColores({ volver }) {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [userInput, setUserInput] = useState([]);\r\n  const [level, setLevel] = useState(1);\r\n  const [isShowing, setIsShowing] = useState(false);\r\n  const [activeIndex, setActiveIndex] = useState(-1);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [errorState, setErrorState] = useState(false);\r\n  const [pressed, setPressed] = useState(null);\r\n  const [timeStart, setTimeStart] = useState(null);\r\n  const { registrarExito, registrarFallo } = useRegistroActividad();\r\n\r\n  const click = new Audio(clickSound);\r\n\r\n  useEffect(() => {\r\n    generateNewSequence(1);\r\n  }, []);\r\n\r\n  const generateNewSequence = async (lvl = level) => {\r\n    const colorPool = BASE_COLORS.slice(0, 3 + Math.floor(lvl / 2)); // más colores con nivel\r\n    const len = Math.min(6, 2 + lvl);\r\n    const seq = Array.from({ length: len }, () =>\r\n      Math.floor(Math.random() * colorPool.length)\r\n    );\r\n    setSequence(seq);\r\n    setUserInput([]);\r\n    setErrorState(false);\r\n    setMessage(\"Observa la secuencia\");\r\n    await showSequence(seq);\r\n  };\r\n\r\n  const showSequence = async (seq) => {\r\n    setIsShowing(true);\r\n    for (let i = 0; i < seq.length; i++) {\r\n      setActiveIndex(seq[i]);\r\n      await sleep(700);\r\n      setActiveIndex(-1);\r\n      await sleep(300);\r\n    }\r\n    setIsShowing(false);\r\n    setTimeStart(Date.now());\r\n    setMessage(\"Ahora repite la secuencia\");\r\n  };\r\n\r\n  const handleColorPress = async (colorIndex) => {\r\n    if (isShowing) return;\r\n    click.play();\r\n    setPressed(colorIndex);\r\n    setTimeout(() => setPressed(null), 150);\r\n\r\n    const nextInput = [...userInput, colorIndex];\r\n    setUserInput(nextInput);\r\n\r\n    const expectedIndex = sequence[nextInput.length - 1];\r\n    if (colorIndex !== expectedIndex) {\r\n      setErrorState(true);\r\n      setMessage(\"❌ Intenta de nuevo\");\r\n      await finishRound(false);\r\n      return;\r\n    }\r\n\r\n    if (nextInput.length === sequence.length) {\r\n      setMessage(\"✅ ¡Excelente memoria!\");\r\n      await finishRound(true);\r\n    }\r\n  };\r\n\r\n  const finishRound = async (success) => {\r\n    if (success) registrarExito(\"Cognitivo\", \"Memoria de Colores\", level);\r\n    else registrarFallo(\"Cognitivo\", \"Memoria de Colores\", level);\r\n\r\n    if (success) setLevel((l) => Math.min(l + 1, 6));\r\n    else setLevel((l) => Math.max(1, l - 1));\r\n\r\n    await sleep(1000);\r\n    setErrorState(false);\r\n    await generateNewSequence(success ? level + 1 : level);\r\n  };\r\n\r\n  const colorPool = BASE_COLORS.slice(0, 3 + Math.floor(level / 2));\r\n\r\n  return (\r\n    <div className=\"memoria-container\">\r\n      <h2>🎨 Memoria de Colores — Nivel {level}</h2>\r\n      <p className=\"memoria-msg\">{message}</p>\r\n\r\n      <div className={`color-grid ${errorState ? \"error\" : \"\"}`} aria-hidden={isShowing}>\r\n        {colorPool.map((c, idx) => (\r\n          <button\r\n            key={c.id}\r\n            className={`color-btn ${activeIndex === idx ? \"active\" : \"\"} ${\r\n              pressed === idx ? \"pressed\" : \"\"\r\n            }`}\r\n            style={{ background: c.hex }}\r\n            onClick={() => handleColorPress(idx)}\r\n            disabled={isShowing}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"volver-btn\" onClick={volver}>\r\n        ⬅ Volver\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
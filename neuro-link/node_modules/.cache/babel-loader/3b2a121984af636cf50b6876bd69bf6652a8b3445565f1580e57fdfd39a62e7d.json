{"ast":null,"code":"/**\r\n * react-router v7.9.3\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\n\"use client\";\n\nimport { deserializeErrors, getHydrationData } from \"./chunk-65XJMMLO.mjs\";\nimport { CRITICAL_CSS_DATA_ATTRIBUTE, FrameworkContext, RemixErrorBoundary, RouterProvider, createBrowserHistory, createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createRouter, decodeViaTurboStream, getPatchRoutesOnNavigationFunction, getTurboStreamSingleFetchDataStrategy, hydrationRouteProperties, invariant, mapRouteProperties, useFogOFWarDiscovery } from \"./chunk-NISHYRIK.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(importMap.textContent).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  if (ssrInfo.context.isSpaMode) {\n    let {\n      loaderData\n    } = ssrInfo.context.state;\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData({\n      state: ssrInfo.context.state,\n      routes,\n      getRouteInfo: routeId => ({\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n      }),\n      location: window.location,\n      basename: window.__reactRouterContext?.basename,\n      isSpaMode: ssrInfo.context.isSpaMode\n    });\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      middleware: ssrInfo.context.future.v8_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(() => router2, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.basename),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.routeDiscovery, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      getContext: props.getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      setCriticalCss(void 0);\n    }\n  }, []);\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\" && criticalCss === void 0) {\n      document.querySelectorAll(`[${CRITICAL_CSS_DATA_ATTRIBUTE}]`).forEach(element => element.remove());\n    }\n  }, [criticalCss]);\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.routeDiscovery, ssrInfo.context.isSpaMode);\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */\n    React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode,\n        routeDiscovery: ssrInfo.context.routeDiscovery\n      }\n    }, /* @__PURE__ */React2.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React2.createElement(RouterProvider2, {\n      router,\n      unstable_onError: props.unstable_onError\n    }))), /* @__PURE__ */React2.createElement(React2.Fragment, null))\n  );\n}\nexport { HydratedRouter, RouterProvider2 as RouterProvider };","map":{"version":3,"names":["deserializeErrors","getHydrationData","CRITICAL_CSS_DATA_ATTRIBUTE","FrameworkContext","RemixErrorBoundary","RouterProvider","createBrowserHistory","createClientRoutes","createClientRoutesWithHMRRevalidationOptOut","createRouter","decodeViaTurboStream","getPatchRoutesOnNavigationFunction","getTurboStreamSingleFetchDataStrategy","hydrationRouteProperties","invariant","mapRouteProperties","useFogOFWarDiscovery","React","ReactDOM","RouterProvider2","props","createElement","flushSync","React2","ssrInfo","router","initSsrInfo","window","__reactRouterContext","__reactRouterManifest","__reactRouterRouteModules","sri","importMap","document","querySelector","textContent","JSON","parse","integrity","err","console","error","context","manifest","routeModules","stateDecodingPromise","routerInitialized","createHydratedRouter","getContext","Error","localSsrInfo","stream","then","value","state","catch","e","routes","ssr","isSpaMode","hydrationData","loaderData","root","hasLoader","getRouteInfo","routeId","clientLoader","hasHydrateFallback","HydrateFallback","location","basename","errors","router2","history","future","middleware","v8_middleware","dataStrategy","patchRoutesOnNavigation","routeDiscovery","initialized","initialize","createRoutesForHMR","__reactRouterDataRouter","HydratedRouter","criticalCss","setCriticalCss","useState","process","env","NODE_ENV","useEffect","querySelectorAll","forEach","element","remove","setLocation","useLayoutEffect","subscribe","newState","Fragment","Provider","unstable_onError"],"sources":["C:/Users/User/Cognia/neuro-link/node_modules/react-router/dist/development/dom-export.mjs"],"sourcesContent":["/**\r\n * react-router v7.9.3\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\n\"use client\";\r\nimport {\r\n  deserializeErrors,\r\n  getHydrationData\r\n} from \"./chunk-65XJMMLO.mjs\";\r\nimport {\r\n  CRITICAL_CSS_DATA_ATTRIBUTE,\r\n  FrameworkContext,\r\n  RemixErrorBoundary,\r\n  RouterProvider,\r\n  createBrowserHistory,\r\n  createClientRoutes,\r\n  createClientRoutesWithHMRRevalidationOptOut,\r\n  createRouter,\r\n  decodeViaTurboStream,\r\n  getPatchRoutesOnNavigationFunction,\r\n  getTurboStreamSingleFetchDataStrategy,\r\n  hydrationRouteProperties,\r\n  invariant,\r\n  mapRouteProperties,\r\n  useFogOFWarDiscovery\r\n} from \"./chunk-NISHYRIK.mjs\";\r\n\r\n// lib/dom-export/dom-router-provider.tsx\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nfunction RouterProvider2(props) {\r\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\r\n}\r\n\r\n// lib/dom-export/hydrated-router.tsx\r\nimport * as React2 from \"react\";\r\nvar ssrInfo = null;\r\nvar router = null;\r\nfunction initSsrInfo() {\r\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\r\n    if (window.__reactRouterManifest.sri === true) {\r\n      const importMap = document.querySelector(\"script[rr-importmap]\");\r\n      if (importMap?.textContent) {\r\n        try {\r\n          window.__reactRouterManifest.sri = JSON.parse(\r\n            importMap.textContent\r\n          ).integrity;\r\n        } catch (err) {\r\n          console.error(\"Failed to parse import map\", err);\r\n        }\r\n      }\r\n    }\r\n    ssrInfo = {\r\n      context: window.__reactRouterContext,\r\n      manifest: window.__reactRouterManifest,\r\n      routeModules: window.__reactRouterRouteModules,\r\n      stateDecodingPromise: void 0,\r\n      router: void 0,\r\n      routerInitialized: false\r\n    };\r\n  }\r\n}\r\nfunction createHydratedRouter({\r\n  getContext\r\n}) {\r\n  initSsrInfo();\r\n  if (!ssrInfo) {\r\n    throw new Error(\r\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\r\n    );\r\n  }\r\n  let localSsrInfo = ssrInfo;\r\n  if (!ssrInfo.stateDecodingPromise) {\r\n    let stream = ssrInfo.context.stream;\r\n    invariant(stream, \"No stream found for single fetch decoding\");\r\n    ssrInfo.context.stream = void 0;\r\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\r\n      ssrInfo.context.state = value.value;\r\n      localSsrInfo.stateDecodingPromise.value = true;\r\n    }).catch((e) => {\r\n      localSsrInfo.stateDecodingPromise.error = e;\r\n    });\r\n  }\r\n  if (ssrInfo.stateDecodingPromise.error) {\r\n    throw ssrInfo.stateDecodingPromise.error;\r\n  }\r\n  if (!ssrInfo.stateDecodingPromise.value) {\r\n    throw ssrInfo.stateDecodingPromise;\r\n  }\r\n  let routes = createClientRoutes(\r\n    ssrInfo.manifest.routes,\r\n    ssrInfo.routeModules,\r\n    ssrInfo.context.state,\r\n    ssrInfo.context.ssr,\r\n    ssrInfo.context.isSpaMode\r\n  );\r\n  let hydrationData = void 0;\r\n  if (ssrInfo.context.isSpaMode) {\r\n    let { loaderData } = ssrInfo.context.state;\r\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\r\n      hydrationData = {\r\n        loaderData: {\r\n          root: loaderData.root\r\n        }\r\n      };\r\n    }\r\n  } else {\r\n    hydrationData = getHydrationData({\r\n      state: ssrInfo.context.state,\r\n      routes,\r\n      getRouteInfo: (routeId) => ({\r\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\r\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\r\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\r\n      }),\r\n      location: window.location,\r\n      basename: window.__reactRouterContext?.basename,\r\n      isSpaMode: ssrInfo.context.isSpaMode\r\n    });\r\n    if (hydrationData && hydrationData.errors) {\r\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\r\n    }\r\n  }\r\n  let router2 = createRouter({\r\n    routes,\r\n    history: createBrowserHistory(),\r\n    basename: ssrInfo.context.basename,\r\n    getContext,\r\n    hydrationData,\r\n    hydrationRouteProperties,\r\n    mapRouteProperties,\r\n    future: {\r\n      middleware: ssrInfo.context.future.v8_middleware\r\n    },\r\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(\r\n      () => router2,\r\n      ssrInfo.manifest,\r\n      ssrInfo.routeModules,\r\n      ssrInfo.context.ssr,\r\n      ssrInfo.context.basename\r\n    ),\r\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\r\n      ssrInfo.manifest,\r\n      ssrInfo.routeModules,\r\n      ssrInfo.context.ssr,\r\n      ssrInfo.context.routeDiscovery,\r\n      ssrInfo.context.isSpaMode,\r\n      ssrInfo.context.basename\r\n    )\r\n  });\r\n  ssrInfo.router = router2;\r\n  if (router2.state.initialized) {\r\n    ssrInfo.routerInitialized = true;\r\n    router2.initialize();\r\n  }\r\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\r\n  createClientRoutesWithHMRRevalidationOptOut;\r\n  window.__reactRouterDataRouter = router2;\r\n  return router2;\r\n}\r\nfunction HydratedRouter(props) {\r\n  if (!router) {\r\n    router = createHydratedRouter({\r\n      getContext: props.getContext\r\n    });\r\n  }\r\n  let [criticalCss, setCriticalCss] = React2.useState(\r\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\r\n  );\r\n  React2.useEffect(() => {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      setCriticalCss(void 0);\r\n    }\r\n  }, []);\r\n  React2.useEffect(() => {\r\n    if (process.env.NODE_ENV === \"development\" && criticalCss === void 0) {\r\n      document.querySelectorAll(`[${CRITICAL_CSS_DATA_ATTRIBUTE}]`).forEach((element) => element.remove());\r\n    }\r\n  }, [criticalCss]);\r\n  let [location, setLocation] = React2.useState(router.state.location);\r\n  React2.useLayoutEffect(() => {\r\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\r\n      ssrInfo.routerInitialized = true;\r\n      ssrInfo.router.initialize();\r\n    }\r\n  }, []);\r\n  React2.useLayoutEffect(() => {\r\n    if (ssrInfo && ssrInfo.router) {\r\n      return ssrInfo.router.subscribe((newState) => {\r\n        if (newState.location !== location) {\r\n          setLocation(newState.location);\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\r\n  useFogOFWarDiscovery(\r\n    router,\r\n    ssrInfo.manifest,\r\n    ssrInfo.routeModules,\r\n    ssrInfo.context.ssr,\r\n    ssrInfo.context.routeDiscovery,\r\n    ssrInfo.context.isSpaMode\r\n  );\r\n  return (\r\n    // This fragment is important to ensure we match the <ServerRouter> JSX\r\n    // structure so that useId values hydrate correctly\r\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\r\n      FrameworkContext.Provider,\r\n      {\r\n        value: {\r\n          manifest: ssrInfo.manifest,\r\n          routeModules: ssrInfo.routeModules,\r\n          future: ssrInfo.context.future,\r\n          criticalCss,\r\n          ssr: ssrInfo.context.ssr,\r\n          isSpaMode: ssrInfo.context.isSpaMode,\r\n          routeDiscovery: ssrInfo.context.routeDiscovery\r\n        }\r\n      },\r\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(\r\n        RouterProvider2,\r\n        {\r\n          router,\r\n          unstable_onError: props.unstable_onError\r\n        }\r\n      ))\r\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\r\n  );\r\n}\r\nexport {\r\n  HydratedRouter,\r\n  RouterProvider2 as RouterProvider\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabdiel Julian\\\\Downloads\\\\Cognia-dev\\\\neuro-link\\\\src\\\\modules\\\\Cognitivo\\\\DibujarFigura.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./Cognitivo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DibujarFigura({\n  volver\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [figuraActual, setFiguraActual] = useState(\"triángulo\");\n  const [strokes, setStrokes] = useState([]);\n  const figuras = [\"triángulo\", \"cuadrado\", \"círculo\"];\n\n  // Inicializa el contexto de canvas\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = 3;\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"#333\";\n    setContext(ctx);\n  }, []);\n  const startDrawing = e => {\n    setDrawing(true);\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n  };\n  const draw = e => {\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    setStrokes(prev => [...prev, {\n      x: offsetX,\n      y: offsetY\n    }]);\n  };\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n  const limpiarCanvas = () => {\n    const canvas = canvasRef.current;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setStrokes([]);\n    setFeedback(\"\");\n  };\n  const [loading, setLoading] = useState(false);\n  const validarDibujo = async () => {\n    setLoading(true);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    const tempCtx = tempCanvas.getContext(\"2d\");\n    tempCtx.fillStyle = \"#ffffff\";\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n    tempCtx.drawImage(canvas, 0, 0);\n    const imageData = tempCanvas.toDataURL(\"image/png\");\n    const payload = {\n      figuraEsperada: figuraActual,\n      image: imageData\n    };\n    try {\n      const res = await fetch(\"http://127.0.0.1:8000/analyze_drawing\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      setFeedback(data.feedback || \"Sin respuesta del servidor\");\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setFeedback(\"Error al analizar el dibujo\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actividad-cognitiva\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dibuja la figura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Instrucci\\xF3n: Dibuja un \", figuraActual]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 400,\n      height: 400,\n      className: \"canvas-dibujo\",\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-actividad\",\n        onClick: validarDibujo,\n        children: \"Validar dibujo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-actividad limpiar\",\n        onClick: limpiarCanvas,\n        children: \"Limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-volver\",\n        onClick: volver,\n        children: \"\\u2B05 Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(DibujarFigura, \"Gr/YP/jeBZjWKzetic0isWQq9Wk=\");\n_c = DibujarFigura;\nvar _c;\n$RefreshReg$(_c, \"DibujarFigura\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","DibujarFigura","volver","_s","canvasRef","drawing","setDrawing","context","setContext","feedback","setFeedback","figuraActual","setFiguraActual","strokes","setStrokes","figuras","canvas","current","ctx","getContext","lineWidth","lineCap","strokeStyle","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","lineTo","stroke","prev","x","y","stopDrawing","limpiarCanvas","clearRect","width","height","loading","setLoading","validarDibujo","tempCanvas","document","createElement","tempCtx","fillStyle","fillRect","drawImage","imageData","toDataURL","payload","figuraEsperada","image","res","fetch","method","headers","body","JSON","stringify","data","json","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Zabdiel Julian/Downloads/Cognia-dev/neuro-link/src/modules/Cognitivo/DibujarFigura.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Cognitivo.css\";\r\n\r\nexport default function DibujarFigura({ volver }) {\r\n  const canvasRef = useRef(null);\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [context, setContext] = useState(null);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [figuraActual, setFiguraActual] = useState(\"triángulo\");\r\n  const [strokes, setStrokes] = useState([]);\r\n\r\n  const figuras = [\"triángulo\", \"cuadrado\", \"círculo\"];\r\n\r\n  // Inicializa el contexto de canvas\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.lineWidth = 3;\r\n    ctx.lineCap = \"round\";\r\n    ctx.strokeStyle = \"#333\";\r\n    setContext(ctx);\r\n  }, []);\r\n\r\n  const startDrawing = (e) => {\r\n    setDrawing(true);\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    context.beginPath();\r\n    context.moveTo(offsetX, offsetY);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!drawing) return;\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    context.lineTo(offsetX, offsetY);\r\n    context.stroke();\r\n\r\n    setStrokes((prev) => [...prev, { x: offsetX, y: offsetY }]);\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setDrawing(false);\r\n  };\r\n\r\n\r\n  const limpiarCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    setStrokes([]);\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const validarDibujo = async () => {\r\n    setLoading(true);\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const tempCanvas = document.createElement(\"canvas\");\r\n    tempCanvas.width = canvas.width;\r\n    tempCanvas.height = canvas.height;\r\n    const tempCtx = tempCanvas.getContext(\"2d\");\r\n\r\n    tempCtx.fillStyle = \"#ffffff\";\r\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\r\n\r\n    tempCtx.drawImage(canvas, 0, 0);\r\n\r\n    const imageData = tempCanvas.toDataURL(\"image/png\");\r\n\r\n    const payload = {\r\n      figuraEsperada: figuraActual,\r\n      image: imageData,\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://127.0.0.1:8000/analyze_drawing\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await res.json();\r\n      setFeedback(data.feedback || \"Sin respuesta del servidor\");\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setFeedback(\"Error al analizar el dibujo\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"actividad-cognitiva\">\r\n      <h1>Dibuja la figura</h1>\r\n      <p>Instrucción: Dibuja un {figuraActual}</p>\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={400}\r\n        height={400}\r\n        className=\"canvas-dibujo\"\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={draw}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n      />\r\n\r\n      <div className=\"botones\">\r\n       <button className=\"boton-actividad\" onClick={validarDibujo}>\r\n        Validar dibujo\r\n        </button>\r\n        <button className=\"boton-actividad limpiar\" onClick={limpiarCanvas}>\r\n          Limpiar\r\n        </button>\r\n        <button className=\"boton-volver\" onClick={volver}>\r\n          ⬅ Volver\r\n        </button>\r\n      </div>\r\n\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
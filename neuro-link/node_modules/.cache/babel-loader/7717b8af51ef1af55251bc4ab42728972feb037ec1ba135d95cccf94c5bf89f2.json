{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabdiel Julian\\\\Downloads\\\\Cognia-dev\\\\neuro-link\\\\src\\\\modules\\\\Social\\\\VozYEmocion.jsx\",\n  _s = $RefreshSig$();\n// src/modules/Social/VozYEmocion.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Social.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VozYEmocion({\n  volver,\n  onPuntuar\n}) {\n  _s();\n  const frases = [{\n    id: 1,\n    text: \"Hola, ¿cómo estás?\",\n    expectedKeywords: [\"hola\", \"cómo\", \"estás\"]\n  }, {\n    id: 2,\n    text: \"Gracias por ayudarme\",\n    expectedKeywords: [\"gracias\", \"ayudarme\"]\n  }, {\n    id: 3,\n    text: \"Me siento feliz hoy\",\n    expectedKeywords: [\"me\", \"siento\", \"feliz\"]\n  }];\n  const [fraseActual, setFraseActual] = useState(frases[Math.floor(Math.random() * frases.length)]);\n  const [feedback, setFeedback] = useState(\"\");\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    // Inicializar SpeechRecognition si está disponible\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition || null;\n    if (!SpeechRecognition) return;\n    const rec = new SpeechRecognition();\n    rec.lang = \"es-ES\";\n    rec.interimResults = false;\n    rec.maxAlternatives = 1;\n    rec.onstart = () => setListening(true);\n    rec.onend = () => setListening(false);\n    rec.onerror = e => {\n      setFeedback(\"Error en reconocimiento: \" + e.error);\n      setListening(false);\n    };\n    rec.onresult = event => {\n      const transcript = event.results[0][0].transcript.toLowerCase();\n      evaluarTranscripcion(transcript);\n    };\n    recognitionRef.current = rec;\n    // cleanup\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.onresult = null;\n        recognitionRef.current.onstart = null;\n        recognitionRef.current.onend = null;\n        recognitionRef.current.onerror = null;\n        try {\n          recognitionRef.current.stop();\n        } catch {}\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n  const evaluarTranscripcion = transcript => {\n    const keywords = fraseActual.expectedKeywords;\n    // Contar cuántas keywords aparecen\n    let aciertos = 0;\n    for (const k of keywords) {\n      if (transcript.includes(k)) aciertos++;\n    }\n    const ratio = aciertos / keywords.length;\n    if (ratio >= 0.6) {\n      setFeedback(\"✅ ¡Muy bien! Buena pronunciación y entonación.\");\n      if (onPuntuar) onPuntuar(1);\n      setTimeout(() => siguienteFrase(), 1400);\n    } else {\n      setFeedback(\"❌ Intenta pronunciar con más claridad. Repite la frase.\");\n    }\n  };\n  const iniciarReconocimiento = () => {\n    const rec = recognitionRef.current;\n    if (!rec) {\n      setFeedback(\"Reconocimiento de voz no disponible en este navegador.\");\n      return;\n    }\n    try {\n      rec.start();\n      setFeedback(\"Escuchando... habla ahora.\");\n    } catch (e) {\n      // ya iniciado\n    }\n  };\n  const siguienteFrase = () => {\n    const nueva = frases[Math.floor(Math.random() * frases.length)];\n    setFraseActual(nueva);\n    setFeedback(\"\");\n  };\n  const marcarLeido = () => {\n    // fallback: usuario clickea que leyó la frase\n    setFeedback(\"Marcado como leído. Buen trabajo.\");\n    if (onPuntuar) onPuntuar(1);\n    setTimeout(() => siguienteFrase(), 1200);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actividad-social\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDD0A Voz y emoci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"contexto\",\n      children: \"Lee en voz alta la siguiente frase con entonaci\\xF3n adecuada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"frase-voz\",\n      children: fraseActual.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 18\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-actividad\",\n        onClick: iniciarReconocimiento,\n        children: listening ? \"Escuchando...\" : \"Comenzar reconocimiento de voz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-actividad limpiar\",\n        style: {\n          marginLeft: 8\n        },\n        onClick: marcarLeido,\n        children: \"Marcar como le\\xEDdo (fallback)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 14\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-volver\",\n        onClick: volver,\n        children: \"\\u2B05 Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(VozYEmocion, \"WUcspSCPyhBUZaqOGGFJJWOrexE=\");\n_c = VozYEmocion;\nvar _c;\n$RefreshReg$(_c, \"VozYEmocion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","VozYEmocion","volver","onPuntuar","_s","frases","id","text","expectedKeywords","fraseActual","setFraseActual","Math","floor","random","length","feedback","setFeedback","listening","setListening","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","rec","lang","interimResults","maxAlternatives","onstart","onend","onerror","e","error","onresult","event","transcript","results","toLowerCase","evaluarTranscripcion","current","stop","keywords","aciertos","k","includes","ratio","setTimeout","siguienteFrase","iniciarReconocimiento","start","nueva","marcarLeido","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Zabdiel Julian/Downloads/Cognia-dev/neuro-link/src/modules/Social/VozYEmocion.jsx"],"sourcesContent":["// src/modules/Social/VozYEmocion.jsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Social.css\";\r\n\r\nexport default function VozYEmocion({ volver, onPuntuar }) {\r\n  const frases = [\r\n    { id: 1, text: \"Hola, ¿cómo estás?\", expectedKeywords: [\"hola\", \"cómo\", \"estás\"] },\r\n    { id: 2, text: \"Gracias por ayudarme\", expectedKeywords: [\"gracias\", \"ayudarme\"] },\r\n    { id: 3, text: \"Me siento feliz hoy\", expectedKeywords: [\"me\", \"siento\", \"feliz\"] },\r\n  ];\r\n\r\n  const [fraseActual, setFraseActual] = useState(\r\n    frases[Math.floor(Math.random() * frases.length)]\r\n  );\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [listening, setListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Inicializar SpeechRecognition si está disponible\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition || null;\r\n    if (!SpeechRecognition) return;\r\n\r\n    const rec = new SpeechRecognition();\r\n    rec.lang = \"es-ES\";\r\n    rec.interimResults = false;\r\n    rec.maxAlternatives = 1;\r\n\r\n    rec.onstart = () => setListening(true);\r\n    rec.onend = () => setListening(false);\r\n    rec.onerror = (e) => {\r\n      setFeedback(\"Error en reconocimiento: \" + e.error);\r\n      setListening(false);\r\n    };\r\n    rec.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript.toLowerCase();\r\n      evaluarTranscripcion(transcript);\r\n    };\r\n\r\n    recognitionRef.current = rec;\r\n    // cleanup\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.onresult = null;\r\n        recognitionRef.current.onstart = null;\r\n        recognitionRef.current.onend = null;\r\n        recognitionRef.current.onerror = null;\r\n        try {\r\n          recognitionRef.current.stop();\r\n        } catch {}\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const evaluarTranscripcion = (transcript) => {\r\n    const keywords = fraseActual.expectedKeywords;\r\n    // Contar cuántas keywords aparecen\r\n    let aciertos = 0;\r\n    for (const k of keywords) {\r\n      if (transcript.includes(k)) aciertos++;\r\n    }\r\n    const ratio = aciertos / keywords.length;\r\n\r\n    if (ratio >= 0.6) {\r\n      setFeedback(\"✅ ¡Muy bien! Buena pronunciación y entonación.\");\r\n      if (onPuntuar) onPuntuar(1);\r\n      setTimeout(() => siguienteFrase(), 1400);\r\n    } else {\r\n      setFeedback(\"❌ Intenta pronunciar con más claridad. Repite la frase.\");\r\n    }\r\n  };\r\n\r\n  const iniciarReconocimiento = () => {\r\n    const rec = recognitionRef.current;\r\n    if (!rec) {\r\n      setFeedback(\"Reconocimiento de voz no disponible en este navegador.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      rec.start();\r\n      setFeedback(\"Escuchando... habla ahora.\");\r\n    } catch (e) {\r\n      // ya iniciado\r\n    }\r\n  };\r\n\r\n  const siguienteFrase = () => {\r\n    const nueva = frases[Math.floor(Math.random() * frases.length)];\r\n    setFraseActual(nueva);\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  const marcarLeido = () => {\r\n    // fallback: usuario clickea que leyó la frase\r\n    setFeedback(\"Marcado como leído. Buen trabajo.\");\r\n    if (onPuntuar) onPuntuar(1);\r\n    setTimeout(() => siguienteFrase(), 1200);\r\n  };\r\n\r\n  return (\r\n    <div className=\"actividad-social\">\r\n      <h1>🔊 Voz y emoción</h1>\r\n      <p className=\"contexto\">\r\n        Lee en voz alta la siguiente frase con entonación adecuada:\r\n      </p>\r\n      <div className=\"frase-voz\">{fraseActual.text}</div>\r\n\r\n      <div style={{ marginTop: 18 }}>\r\n        <button className=\"boton-actividad\" onClick={iniciarReconocimiento}>\r\n          {listening ? \"Escuchando...\" : \"Comenzar reconocimiento de voz\"}\r\n        </button>\r\n\r\n        <button\r\n          className=\"boton-actividad limpiar\"\r\n          style={{ marginLeft: 8 }}\r\n          onClick={marcarLeido}\r\n        >\r\n          Marcar como leído (fallback)\r\n        </button>\r\n      </div>\r\n\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n\r\n      <div style={{ marginTop: 14 }}>\r\n        <button className=\"boton-volver\" onClick={volver}>\r\n          ⬅ Volver\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabdiel Julian\\\\Downloads\\\\Cognia-dev\\\\neuro-link\\\\src\\\\modules\\\\Cognitivo\\\\MemoriaColores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useRegistroActividad } from \"../../hooks/useRegistroActividad\";\nimport \"./MemoriaColores.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [{\n  id: \"blue\",\n  hex: \"#A6D8FF\"\n}, {\n  id: \"green\",\n  hex: \"#A8E6CF\"\n}, {\n  id: \"lav\",\n  hex: \"#E9D5FF\"\n}, {\n  id: \"peach\",\n  hex: \"#FFD9B3\"\n}];\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\nexport default function MemoriaColores({\n  volver\n}) {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [userInput, setUserInput] = useState([]);\n  const [level, setLevel] = useState(1);\n  const [isShowing, setIsShowing] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [message, setMessage] = useState(\"\");\n  const [timeStart, setTimeStart] = useState(null);\n\n  // 🔗 Hook para registrar datos de actividad\n  const {\n    registrarExito,\n    registrarFallo\n  } = useRegistroActividad();\n  const generateNewSequence = async (lvl = level) => {\n    const len = Math.min(6, 2 + lvl);\n    const seq = Array.from({\n      length: len\n    }, () => Math.floor(Math.random() * COLORS.length));\n    setSequence(seq);\n    setUserInput([]);\n    setMessage(\"Observa la secuencia\");\n    await showSequence(seq);\n  };\n  const showSequence = async seq => {\n    setIsShowing(true);\n    for (let i = 0; i < seq.length; i++) {\n      setActiveIndex(seq[i]);\n      await sleep(700);\n      setActiveIndex(-1);\n      await sleep(300);\n    }\n    setIsShowing(false);\n    setTimeStart(Date.now());\n    setMessage(\"Ahora repite la secuencia\");\n  };\n  const handleColorPress = async colorIndex => {\n    if (isShowing) return;\n    const nextInput = [...userInput, colorIndex];\n    setUserInput(nextInput);\n    const expectedIndex = sequence[nextInput.length - 1];\n    if (colorIndex !== expectedIndex) {\n      setMessage(\"Casi… intenta otra vez 😅\");\n      await finishRound(false);\n      return;\n    }\n    if (nextInput.length === sequence.length) {\n      setMessage(\"¡Excelente memoria! 🧠\");\n      await finishRound(true);\n    }\n  };\n  const finishRound = async success => {\n    const tiempo = timeStart ? Math.round((Date.now() - timeStart) / 1000) : 0;\n\n    // ✅ Registrar resultado en la base de datos\n    if (success) {\n      registrarExito(\"Cognitivo\", \"Memoria de Colores\", level);\n    } else {\n      registrarFallo(\"Cognitivo\", \"Memoria de Colores\", level);\n    }\n\n    // Ajuste de dificultad (modo local)\n    if (success) {\n      setLevel(l => Math.min(l + 1, 5));\n      setMessage(\"🔥 ¡Nivel superado!\");\n    } else {\n      setLevel(l => Math.max(1, l - 1));\n      setMessage(\"📉 Nivel reducido para practicar\");\n    }\n    await sleep(1000);\n    await generateNewSequence(level);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memoria-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDFA8 Memoria de Colores \\u2014 Nivel \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"memoria-msg\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-grid\",\n      \"aria-hidden\": isShowing,\n      children: COLORS.map((c, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `color-btn ${activeIndex === idx ? \"active\" : \"\"}`,\n        style: {\n          background: c.hex\n        },\n        onClick: () => handleColorPress(idx),\n        disabled: isShowing\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memoria-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-btn\",\n        onClick: () => generateNewSequence(level),\n        disabled: isShowing,\n        children: isShowing ? \"Mostrando...\" : \"▶️ Iniciar secuencia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: () => {\n          setLevel(1);\n          generateNewSequence(1);\n        },\n        children: \"\\uD83D\\uDD04 Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"volver-btn\",\n        onClick: volver,\n        children: \"\\u2B05 Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoriaColores, \"TW7Te1+OtbxDrp0hoA9Ozx0PAQs=\", false, function () {\n  return [useRegistroActividad];\n});\n_c = MemoriaColores;\nvar _c;\n$RefreshReg$(_c, \"MemoriaColores\");","map":{"version":3,"names":["React","useEffect","useState","useRegistroActividad","jsxDEV","_jsxDEV","COLORS","id","hex","sleep","ms","Promise","r","setTimeout","MemoriaColores","volver","_s","sequence","setSequence","userInput","setUserInput","level","setLevel","isShowing","setIsShowing","activeIndex","setActiveIndex","message","setMessage","timeStart","setTimeStart","registrarExito","registrarFallo","generateNewSequence","lvl","len","Math","min","seq","Array","from","length","floor","random","showSequence","i","Date","now","handleColorPress","colorIndex","nextInput","expectedIndex","finishRound","success","tiempo","round","l","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","idx","style","background","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Zabdiel Julian/Downloads/Cognia-dev/neuro-link/src/modules/Cognitivo/MemoriaColores.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRegistroActividad } from \"../../hooks/useRegistroActividad\";\r\nimport \"./MemoriaColores.css\";\r\n\r\nconst COLORS = [\r\n  { id: \"blue\", hex: \"#A6D8FF\" },\r\n  { id: \"green\", hex: \"#A8E6CF\" },\r\n  { id: \"lav\", hex: \"#E9D5FF\" },\r\n  { id: \"peach\", hex: \"#FFD9B3\" },\r\n];\r\n\r\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\r\n\r\nexport default function MemoriaColores({ volver }) {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [userInput, setUserInput] = useState([]);\r\n  const [level, setLevel] = useState(1);\r\n  const [isShowing, setIsShowing] = useState(false);\r\n  const [activeIndex, setActiveIndex] = useState(-1);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [timeStart, setTimeStart] = useState(null);\r\n\r\n  // 🔗 Hook para registrar datos de actividad\r\n  const { registrarExito, registrarFallo } = useRegistroActividad();\r\n\r\n  const generateNewSequence = async (lvl = level) => {\r\n    const len = Math.min(6, 2 + lvl);\r\n    const seq = Array.from({ length: len }, () =>\r\n      Math.floor(Math.random() * COLORS.length)\r\n    );\r\n    setSequence(seq);\r\n    setUserInput([]);\r\n    setMessage(\"Observa la secuencia\");\r\n    await showSequence(seq);\r\n  };\r\n\r\n  const showSequence = async (seq) => {\r\n    setIsShowing(true);\r\n    for (let i = 0; i < seq.length; i++) {\r\n      setActiveIndex(seq[i]);\r\n      await sleep(700);\r\n      setActiveIndex(-1);\r\n      await sleep(300);\r\n    }\r\n    setIsShowing(false);\r\n    setTimeStart(Date.now());\r\n    setMessage(\"Ahora repite la secuencia\");\r\n  };\r\n\r\n  const handleColorPress = async (colorIndex) => {\r\n    if (isShowing) return;\r\n    const nextInput = [...userInput, colorIndex];\r\n    setUserInput(nextInput);\r\n\r\n    const expectedIndex = sequence[nextInput.length - 1];\r\n    if (colorIndex !== expectedIndex) {\r\n      setMessage(\"Casi… intenta otra vez 😅\");\r\n      await finishRound(false);\r\n      return;\r\n    }\r\n\r\n    if (nextInput.length === sequence.length) {\r\n      setMessage(\"¡Excelente memoria! 🧠\");\r\n      await finishRound(true);\r\n    }\r\n  };\r\n\r\n  const finishRound = async (success) => {\r\n    const tiempo = timeStart ? Math.round((Date.now() - timeStart) / 1000) : 0;\r\n\r\n    // ✅ Registrar resultado en la base de datos\r\n    if (success) {\r\n      registrarExito(\"Cognitivo\", \"Memoria de Colores\", level);\r\n    } else {\r\n      registrarFallo(\"Cognitivo\", \"Memoria de Colores\", level);\r\n    }\r\n\r\n    // Ajuste de dificultad (modo local)\r\n    if (success) {\r\n      setLevel((l) => Math.min(l + 1, 5));\r\n      setMessage(\"🔥 ¡Nivel superado!\");\r\n    } else {\r\n      setLevel((l) => Math.max(1, l - 1));\r\n      setMessage(\"📉 Nivel reducido para practicar\");\r\n    }\r\n\r\n    await sleep(1000);\r\n    await generateNewSequence(level);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memoria-container\">\r\n      <h2>🎨 Memoria de Colores — Nivel {level}</h2>\r\n      <p className=\"memoria-msg\">{message}</p>\r\n\r\n      <div className=\"color-grid\" aria-hidden={isShowing}>\r\n        {COLORS.map((c, idx) => (\r\n          <button\r\n            key={c.id}\r\n            className={`color-btn ${activeIndex === idx ? \"active\" : \"\"}`}\r\n            style={{ background: c.hex }}\r\n            onClick={() => handleColorPress(idx)}\r\n            disabled={isShowing}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"memoria-controls\">\r\n        <button\r\n          className=\"start-btn\"\r\n          onClick={() => generateNewSequence(level)}\r\n          disabled={isShowing}\r\n        >\r\n          {isShowing ? \"Mostrando...\" : \"▶️ Iniciar secuencia\"}\r\n        </button>\r\n        <button\r\n          className=\"reset-btn\"\r\n          onClick={() => {\r\n            setLevel(1);\r\n            generateNewSequence(1);\r\n          }}\r\n        >\r\n          🔄 Reiniciar\r\n        </button>\r\n        <button className=\"volver-btn\" onClick={volver}>\r\n          ⬅ Volver\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
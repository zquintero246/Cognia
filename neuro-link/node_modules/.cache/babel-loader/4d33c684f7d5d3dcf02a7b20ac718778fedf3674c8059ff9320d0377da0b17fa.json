{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nimport { noop } from 'es-toolkit';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { useAnimationManager } from './useAnimationManager';\nimport { getTransitionVal } from './util';\nvar defaultProps = {\n  begin: 0,\n  duration: 1000,\n  easing: 'ease',\n  isActive: true,\n  canBegin: true,\n  onAnimationEnd: () => {},\n  onAnimationStart: () => {}\n};\nexport function CSSTransitionAnimate(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultProps);\n  var {\n    animationId,\n    from,\n    to,\n    attributeName,\n    isActive,\n    canBegin,\n    duration,\n    easing,\n    begin,\n    onAnimationEnd,\n    onAnimationStart: onAnimationStartFromProps,\n    children\n  } = props;\n  var animationManager = useAnimationManager(animationId + attributeName, props.animationManager);\n  var [style, setStyle] = useState(() => {\n    if (!isActive) {\n      return to;\n    }\n    return from;\n  });\n  var initialized = useRef(false);\n  var onAnimationStart = useCallback(() => {\n    setStyle(from);\n    onAnimationStartFromProps();\n  }, [from, onAnimationStartFromProps]);\n  useEffect(() => {\n    if (!isActive || !canBegin) {\n      return noop;\n    }\n    initialized.current = true;\n    var unsubscribe = animationManager.subscribe(setStyle);\n    animationManager.start([onAnimationStart, begin, to, duration, onAnimationEnd]);\n    return () => {\n      animationManager.stop();\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      onAnimationEnd();\n    };\n  }, [isActive, canBegin, duration, easing, begin, onAnimationStart, onAnimationEnd, animationManager, to, from]);\n  if (!isActive) {\n    /*\n     * With isActive=false, the component always renders with the final style, immediately,\n     * and ignores all other props.\n     * Also there is no transition applied.\n     */\n    return children({\n      [attributeName]: to\n    });\n  }\n  if (!canBegin) {\n    return children({\n      [attributeName]: from\n    });\n  }\n  if (initialized.current) {\n    var transition = getTransitionVal([attributeName], duration, easing);\n    return children({\n      transition,\n      [attributeName]: style\n    });\n  }\n  return children({\n    [attributeName]: from\n  });\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","noop","resolveDefaultProps","useAnimationManager","getTransitionVal","defaultProps","begin","duration","easing","isActive","canBegin","onAnimationEnd","onAnimationStart","CSSTransitionAnimate","outsideProps","props","animationId","from","to","attributeName","onAnimationStartFromProps","children","animationManager","style","setStyle","initialized","current","unsubscribe","subscribe","start","stop","transition"],"sources":["C:/yo/personal/Proyectos/CognIA Hackaton UNAB 2025/node_modules/recharts/es6/animation/CSSTransitionAnimate.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { noop } from 'es-toolkit';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { useAnimationManager } from './useAnimationManager';\nimport { getTransitionVal } from './util';\nvar defaultProps = {\n  begin: 0,\n  duration: 1000,\n  easing: 'ease',\n  isActive: true,\n  canBegin: true,\n  onAnimationEnd: () => {},\n  onAnimationStart: () => {}\n};\nexport function CSSTransitionAnimate(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultProps);\n  var {\n    animationId,\n    from,\n    to,\n    attributeName,\n    isActive,\n    canBegin,\n    duration,\n    easing,\n    begin,\n    onAnimationEnd,\n    onAnimationStart: onAnimationStartFromProps,\n    children\n  } = props;\n  var animationManager = useAnimationManager(animationId + attributeName, props.animationManager);\n  var [style, setStyle] = useState(() => {\n    if (!isActive) {\n      return to;\n    }\n    return from;\n  });\n  var initialized = useRef(false);\n  var onAnimationStart = useCallback(() => {\n    setStyle(from);\n    onAnimationStartFromProps();\n  }, [from, onAnimationStartFromProps]);\n  useEffect(() => {\n    if (!isActive || !canBegin) {\n      return noop;\n    }\n    initialized.current = true;\n    var unsubscribe = animationManager.subscribe(setStyle);\n    animationManager.start([onAnimationStart, begin, to, duration, onAnimationEnd]);\n    return () => {\n      animationManager.stop();\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      onAnimationEnd();\n    };\n  }, [isActive, canBegin, duration, easing, begin, onAnimationStart, onAnimationEnd, animationManager, to, from]);\n  if (!isActive) {\n    /*\n     * With isActive=false, the component always renders with the final style, immediately,\n     * and ignores all other props.\n     * Also there is no transition applied.\n     */\n    return children({\n      [attributeName]: to\n    });\n  }\n  if (!canBegin) {\n    return children({\n      [attributeName]: from\n    });\n  }\n  if (initialized.current) {\n    var transition = getTransitionVal([attributeName], duration, easing);\n    return children({\n      transition,\n      [attributeName]: style\n    });\n  }\n  return children({\n    [attributeName]: from\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
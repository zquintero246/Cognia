{"ast":null,"code":"\"use client\";\n\nimport { useState, useEffect } from 'react';\nfunction usePageInView() {\n  const [isInView, setIsInView] = useState(true);\n  useEffect(() => {\n    const handleVisibilityChange = () => setIsInView(!document.hidden);\n    if (document.hidden) {\n      handleVisibilityChange();\n    }\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, []);\n  return isInView;\n}\nexport { usePageInView };","map":{"version":3,"names":["useState","useEffect","usePageInView","isInView","setIsInView","handleVisibilityChange","document","hidden","addEventListener","removeEventListener"],"sources":["C:/Users/Zabdiel Julian/Downloads/Cognia-dev/neuro-link/node_modules/framer-motion/dist/es/utils/use-page-in-view.mjs"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction usePageInView() {\r\n    const [isInView, setIsInView] = useState(true);\r\n    useEffect(() => {\r\n        const handleVisibilityChange = () => setIsInView(!document.hidden);\r\n        if (document.hidden) {\r\n            handleVisibilityChange();\r\n        }\r\n        document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n        return () => {\r\n            document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n        };\r\n    }, []);\r\n    return isInView;\r\n}\r\n\r\nexport { usePageInView };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,aAAaA,CAAA,EAAG;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACZ,MAAMI,sBAAsB,GAAGA,CAAA,KAAMD,WAAW,CAAC,CAACE,QAAQ,CAACC,MAAM,CAAC;IAClE,IAAID,QAAQ,CAACC,MAAM,EAAE;MACjBF,sBAAsB,CAAC,CAAC;IAC5B;IACAC,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEH,sBAAsB,CAAC;IACrE,OAAO,MAAM;MACTC,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;IAC5E,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,QAAQ;AACnB;AAEA,SAASD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
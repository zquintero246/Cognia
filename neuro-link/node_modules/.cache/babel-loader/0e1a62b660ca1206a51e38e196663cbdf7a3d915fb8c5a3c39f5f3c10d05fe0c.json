{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabdiel Julian\\\\Downloads\\\\Cognia-dev\\\\neuro-link\\\\src\\\\modules\\\\Cognitivo\\\\DibujarFigura.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./Cognitivo.css\";\nimport { useRegistroActividad } from \"../../hooks/useRegistroActividad\"; // ✅ Importa el hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DibujarFigura({\n  volver\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  const [context, setContext] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [figuraActual, setFiguraActual] = useState(\"triángulo\");\n  const [strokes, setStrokes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // ✅ Hook de registro\n  const {\n    registrarExito,\n    registrarFallo\n  } = useRegistroActividad();\n  const figuras = [\"triángulo\", \"cuadrado\", \"círculo\"];\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = 3;\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"#333\";\n    setContext(ctx);\n  }, []);\n\n  // 🔹 dentro de validarDibujo(), justo después de setFeedback(resultText);\n  if (resultText.toLowerCase().includes(\"correct\") || resultText.toLowerCase().includes(\"bien\")) {\n    registrarExito(\"Cognitivo\", \"Dibujar la figura\", 3);\n    setFeedback(\"✅ ¡Excelente!\");\n    setErrores(0);\n    cambiarFigura(); // cambia figura tras acierto\n    limpiarCanvas();\n  } else {\n    registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\n    setFeedback(\"❌ Intenta de nuevo\");\n    setErrores(e => e + 1);\n  }\n\n  // 🔹 hint visual si se equivoca mucho\n  useEffect(() => {\n    if (errores >= 3 && context) {\n      const ctx = context;\n      ctx.strokeStyle = \"#aaa\";\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      if (figuraActual === \"cuadrado\") {\n        ctx.rect(100, 100, 200, 200);\n      } else if (figuraActual === \"círculo\") {\n        ctx.arc(200, 200, 100, 0, Math.PI * 2);\n      } else {\n        ctx.moveTo(200, 100);\n        ctx.lineTo(100, 300);\n        ctx.lineTo(300, 300);\n        ctx.closePath();\n      }\n      ctx.stroke();\n      setFeedback(\"💡 Pista: así se ve un \" + figuraActual);\n      setErrores(0);\n    }\n  }, [errores, context]);\n  const startDrawing = e => {\n    setDrawing(true);\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n  };\n  const draw = e => {\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n    setStrokes(prev => [...prev, {\n      x: offsetX,\n      y: offsetY\n    }]);\n  };\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n  const limpiarCanvas = () => {\n    const canvas = canvasRef.current;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setStrokes([]);\n    setFeedback(\"\");\n  };\n\n  // 🔹 Estados nuevos\n  const [errores, setErrores] = useState(0);\n\n  // 🔹 función auxiliar: cambia figura aleatoriamente\n  const cambiarFigura = () => {\n    const nueva = figuras[Math.floor(Math.random() * figuras.length)];\n    setFiguraActual(nueva);\n  };\n\n  // 🔹 dentro de validarDibujo(), justo después de setFeedback(resultText);\n  if (resultText.toLowerCase().includes(\"correct\") || resultText.toLowerCase().includes(\"bien\")) {\n    registrarExito(\"Cognitivo\", \"Dibujar la figura\", 3);\n    setFeedback(\"✅ ¡Excelente!\");\n    setErrores(0);\n    cambiarFigura(); // cambia figura tras acierto\n    limpiarCanvas();\n  } else {\n    registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\n    setFeedback(\"❌ Intenta de nuevo\");\n    setErrores(e => e + 1);\n  }\n\n  // 🔹 hint visual si se equivoca mucho\n  useEffect(() => {\n    if (errores >= 3 && context) {\n      const ctx = context;\n      ctx.strokeStyle = \"#aaa\";\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      if (figuraActual === \"cuadrado\") {\n        ctx.rect(100, 100, 200, 200);\n      } else if (figuraActual === \"círculo\") {\n        ctx.arc(200, 200, 100, 0, Math.PI * 2);\n      } else {\n        ctx.moveTo(200, 100);\n        ctx.lineTo(100, 300);\n        ctx.lineTo(300, 300);\n        ctx.closePath();\n      }\n      ctx.stroke();\n      setFeedback(\"💡 Pista: así se ve un \" + figuraActual);\n      setErrores(0);\n    }\n  }, [errores, context]);\n  const validarDibujo = async () => {\n    setLoading(true);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    const tempCtx = tempCanvas.getContext(\"2d\");\n    tempCtx.fillStyle = \"#ffffff\";\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n    tempCtx.drawImage(canvas, 0, 0);\n    const imageData = tempCanvas.toDataURL(\"image/png\");\n    const payload = {\n      figuraEsperada: figuraActual,\n      image: imageData\n    };\n    try {\n      const res = await fetch(\"http://127.0.0.1:8000/analyze_drawing\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      const resultText = data.feedback || \"Sin respuesta del servidor\";\n      setFeedback(resultText);\n\n      // ✅ Registro según el resultado\n      if (resultText.toLowerCase().includes(\"correct\") || resultText.toLowerCase().includes(\"bien\")) {\n        registrarExito(\"Cognitivo\", \"Dibujar la figura\", 3);\n      } else {\n        registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\n      }\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setFeedback(\"Error al analizar el dibujo\");\n      registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actividad-cognitiva\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dibuja la figura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Instrucci\\xF3n: Dibuja un \", figuraActual]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 400,\n      height: 400,\n      className: \"canvas-dibujo\",\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-actividad\",\n        onClick: validarDibujo,\n        disabled: loading,\n        children: loading ? \"Analizando...\" : \"Validar dibujo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-actividad limpiar\",\n        onClick: limpiarCanvas,\n        children: \"Limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton-volver\",\n        onClick: volver,\n        children: \"\\u2B05 Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(DibujarFigura, \"TQKS1IZfMTHGG52qeQpmf/Pgtbc=\", false, function () {\n  return [useRegistroActividad];\n});\n_c = DibujarFigura;\nvar _c;\n$RefreshReg$(_c, \"DibujarFigura\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useRegistroActividad","jsxDEV","_jsxDEV","DibujarFigura","volver","_s","canvasRef","drawing","setDrawing","context","setContext","feedback","setFeedback","figuraActual","setFiguraActual","strokes","setStrokes","loading","setLoading","registrarExito","registrarFallo","figuras","canvas","current","ctx","getContext","lineWidth","lineCap","strokeStyle","resultText","toLowerCase","includes","setErrores","cambiarFigura","limpiarCanvas","e","errores","beginPath","rect","arc","Math","PI","moveTo","lineTo","closePath","stroke","startDrawing","offsetX","offsetY","nativeEvent","draw","prev","x","y","stopDrawing","clearRect","width","height","nueva","floor","random","length","validarDibujo","tempCanvas","document","createElement","tempCtx","fillStyle","fillRect","drawImage","imageData","toDataURL","payload","figuraEsperada","image","res","fetch","method","headers","body","JSON","stringify","data","json","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Zabdiel Julian/Downloads/Cognia-dev/neuro-link/src/modules/Cognitivo/DibujarFigura.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Cognitivo.css\";\r\nimport { useRegistroActividad } from \"../../hooks/useRegistroActividad\"; // ✅ Importa el hook\r\n\r\nexport default function DibujarFigura({ volver }) {\r\n  const canvasRef = useRef(null);\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [context, setContext] = useState(null);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [figuraActual, setFiguraActual] = useState(\"triángulo\");\r\n  const [strokes, setStrokes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // ✅ Hook de registro\r\n  const { registrarExito, registrarFallo } = useRegistroActividad();\r\n\r\n  const figuras = [\"triángulo\", \"cuadrado\", \"círculo\"];\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.lineWidth = 3;\r\n    ctx.lineCap = \"round\";\r\n    ctx.strokeStyle = \"#333\";\r\n    setContext(ctx);\r\n  }, []);\r\n  \r\n  // 🔹 dentro de validarDibujo(), justo después de setFeedback(resultText);\r\n  if (resultText.toLowerCase().includes(\"correct\") || resultText.toLowerCase().includes(\"bien\")) {\r\n    registrarExito(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n    setFeedback(\"✅ ¡Excelente!\");\r\n    setErrores(0);\r\n    cambiarFigura(); // cambia figura tras acierto\r\n    limpiarCanvas();\r\n  } else {\r\n    registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n    setFeedback(\"❌ Intenta de nuevo\");\r\n    setErrores((e) => e + 1);\r\n  }\r\n\r\n  // 🔹 hint visual si se equivoca mucho\r\n  useEffect(() => {\r\n    if (errores >= 3 && context) {\r\n      const ctx = context;\r\n      ctx.strokeStyle = \"#aaa\";\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n\r\n      if (figuraActual === \"cuadrado\") {\r\n        ctx.rect(100, 100, 200, 200);\r\n      } else if (figuraActual === \"círculo\") {\r\n        ctx.arc(200, 200, 100, 0, Math.PI * 2);\r\n      } else {\r\n        ctx.moveTo(200, 100);\r\n        ctx.lineTo(100, 300);\r\n        ctx.lineTo(300, 300);\r\n        ctx.closePath();\r\n      }\r\n\r\n      ctx.stroke();\r\n      setFeedback(\"💡 Pista: así se ve un \" + figuraActual);\r\n      setErrores(0);\r\n    }\r\n  }, [errores, context]);\r\n\r\n  const startDrawing = (e) => {\r\n    setDrawing(true);\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    context.beginPath();\r\n    context.moveTo(offsetX, offsetY);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!drawing) return;\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    context.lineTo(offsetX, offsetY);\r\n    context.stroke();\r\n\r\n    setStrokes((prev) => [...prev, { x: offsetX, y: offsetY }]);\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    setDrawing(false);\r\n  };\r\n\r\n  const limpiarCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    setStrokes([]);\r\n    setFeedback(\"\");\r\n  };\r\n\r\n  // 🔹 Estados nuevos\r\n  const [errores, setErrores] = useState(0);\r\n\r\n  // 🔹 función auxiliar: cambia figura aleatoriamente\r\n  const cambiarFigura = () => {\r\n    const nueva = figuras[Math.floor(Math.random() * figuras.length)];\r\n    setFiguraActual(nueva);\r\n  };\r\n\r\n  // 🔹 dentro de validarDibujo(), justo después de setFeedback(resultText);\r\n  if (resultText.toLowerCase().includes(\"correct\") || resultText.toLowerCase().includes(\"bien\")) {\r\n    registrarExito(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n    setFeedback(\"✅ ¡Excelente!\");\r\n    setErrores(0);\r\n    cambiarFigura(); // cambia figura tras acierto\r\n    limpiarCanvas();\r\n  } else {\r\n    registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n    setFeedback(\"❌ Intenta de nuevo\");\r\n    setErrores((e) => e + 1);\r\n  }\r\n\r\n  // 🔹 hint visual si se equivoca mucho\r\n  useEffect(() => {\r\n    if (errores >= 3 && context) {\r\n      const ctx = context;\r\n      ctx.strokeStyle = \"#aaa\";\r\n      ctx.lineWidth = 2;\r\n      ctx.beginPath();\r\n\r\n      if (figuraActual === \"cuadrado\") {\r\n        ctx.rect(100, 100, 200, 200);\r\n      } else if (figuraActual === \"círculo\") {\r\n        ctx.arc(200, 200, 100, 0, Math.PI * 2);\r\n      } else {\r\n        ctx.moveTo(200, 100);\r\n        ctx.lineTo(100, 300);\r\n        ctx.lineTo(300, 300);\r\n        ctx.closePath();\r\n      }\r\n\r\n      ctx.stroke();\r\n      setFeedback(\"💡 Pista: así se ve un \" + figuraActual);\r\n      setErrores(0);\r\n    }\r\n  }, [errores, context]);\r\n\r\n  const validarDibujo = async () => {\r\n    setLoading(true);\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const tempCanvas = document.createElement(\"canvas\");\r\n    tempCanvas.width = canvas.width;\r\n    tempCanvas.height = canvas.height;\r\n    const tempCtx = tempCanvas.getContext(\"2d\");\r\n\r\n    tempCtx.fillStyle = \"#ffffff\";\r\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\r\n\r\n    tempCtx.drawImage(canvas, 0, 0);\r\n\r\n    const imageData = tempCanvas.toDataURL(\"image/png\");\r\n\r\n    const payload = {\r\n      figuraEsperada: figuraActual,\r\n      image: imageData,\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://127.0.0.1:8000/analyze_drawing\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const resultText = data.feedback || \"Sin respuesta del servidor\";\r\n\r\n      setFeedback(resultText);\r\n\r\n      // ✅ Registro según el resultado\r\n      if (resultText.toLowerCase().includes(\"correct\") || resultText.toLowerCase().includes(\"bien\")) {\r\n        registrarExito(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n      } else {\r\n        registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setFeedback(\"Error al analizar el dibujo\");\r\n      registrarFallo(\"Cognitivo\", \"Dibujar la figura\", 3);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"actividad-cognitiva\">\r\n      <h1>Dibuja la figura</h1>\r\n      <p>Instrucción: Dibuja un {figuraActual}</p>\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={400}\r\n        height={400}\r\n        className=\"canvas-dibujo\"\r\n        onMouseDown={startDrawing}\r\n        onMouseMove={draw}\r\n        onMouseUp={stopDrawing}\r\n        onMouseLeave={stopDrawing}\r\n      />\r\n\r\n      <div className=\"botones\">\r\n        <button\r\n          className=\"boton-actividad\"\r\n          onClick={validarDibujo}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Analizando...\" : \"Validar dibujo\"}\r\n        </button>\r\n        <button className=\"boton-actividad limpiar\" onClick={limpiarCanvas}>\r\n          Limpiar\r\n        </button>\r\n        <button className=\"boton-volver\" onClick={volver}>\r\n          ⬅ Volver\r\n        </button>\r\n      </div>\r\n\r\n      {feedback && <p className=\"feedback\">{feedback}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
"use strict";
function assignRef(ref, value) {
  if (ref == null) return;
  if (typeof ref === "function") {
    return ref(value);
  }
  try {
    ref.current = value;
  } catch (error) {
    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);
  }
}
function mergeRefs(...refs) {
  const availableRefs = refs.filter((ref) => ref != null);
  const cleanupMap = /* @__PURE__ */ new Map();
  return (node) => {
    availableRefs.forEach((ref) => {
      const cleanup = assignRef(ref, node);
      if (cleanup) {
        cleanupMap.set(ref, cleanup);
      }
    });
    return () => {
      availableRefs.forEach((ref) => {
        const cleanup = cleanupMap.get(ref);
        if (cleanup && typeof cleanup === "function") {
          cleanup();
        } else {
          assignRef(ref, null);
        }
      });
      cleanupMap.clear();
    };
  };
}

export { assignRef, mergeRefs };

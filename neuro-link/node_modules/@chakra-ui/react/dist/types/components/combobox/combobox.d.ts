import type { Assign, CollectionItem } from "@ark-ui/react";
import { Combobox as ArkCombobox } from "@ark-ui/react/combobox";
import { type JSX } from "react";
import { type HTMLChakraProps, type SlotRecipeProps, type UnstyledProp } from "../../styled-system";
declare const useComboboxStyles: () => Record<string, import("../..").SystemStyleObject>;
export { useComboboxStyles };
export interface ComboboxRootProviderBaseProps<T extends CollectionItem = any> extends Assign<ArkCombobox.RootProviderBaseProps<T>, SlotRecipeProps<"combobox">>, UnstyledProp {
}
export interface ComboboxRootProviderProps<T extends CollectionItem = any> extends HTMLChakraProps<"div", ComboboxRootProviderBaseProps<T>> {
}
interface ComboboxRootProviderComponent {
    <T extends CollectionItem>(props: ComboboxRootProviderProps<T>): JSX.Element;
}
export declare const ComboboxRootProvider: ComboboxRootProviderComponent;
export interface ComboboxRootBaseProps<T extends CollectionItem = any> extends Assign<ArkCombobox.RootBaseProps<T>, SlotRecipeProps<"combobox">>, UnstyledProp {
}
export interface ComboboxRootProps<T extends CollectionItem = any> extends HTMLChakraProps<"div", ComboboxRootBaseProps<T>> {
}
export interface ComboboxRootComponent {
    <T extends CollectionItem>(props: ComboboxRootProps<T> & React.RefAttributes<HTMLDivElement>): JSX.Element;
}
export declare const ComboboxRoot: ComboboxRootComponent;
export declare const ComboboxPropsProvider: React.Provider<ComboboxRootBaseProps>;
export interface ComboboxTriggerProps extends HTMLChakraProps<"button", ArkCombobox.TriggerBaseProps>, UnstyledProp {
}
export declare const ComboboxTrigger: import("react").ForwardRefExoticComponent<ComboboxTriggerProps & import("react").RefAttributes<HTMLButtonElement>>;
export interface ComboboxPositionerProps extends HTMLChakraProps<"div", ArkCombobox.PositionerBaseProps>, UnstyledProp {
}
export declare const ComboboxPositioner: import("react").ForwardRefExoticComponent<ComboboxPositionerProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxContentProps extends HTMLChakraProps<"div", ArkCombobox.ContentBaseProps>, UnstyledProp {
}
export declare const ComboboxContent: import("react").ForwardRefExoticComponent<ComboboxContentProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxInputProps extends HTMLChakraProps<"input", ArkCombobox.InputBaseProps>, UnstyledProp {
}
export declare const ComboboxInput: import("react").ForwardRefExoticComponent<ComboboxInputProps & import("react").RefAttributes<HTMLInputElement>>;
export interface ComboboxClearTriggerProps extends HTMLChakraProps<"button", ArkCombobox.ClearTriggerBaseProps>, UnstyledProp {
}
export declare const ComboboxClearTrigger: import("react").ForwardRefExoticComponent<ComboboxClearTriggerProps & import("react").RefAttributes<HTMLButtonElement>>;
export interface ComboboxIndicatorGroupProps extends HTMLChakraProps<"div">, UnstyledProp {
}
export declare const ComboboxIndicatorGroup: import("react").ForwardRefExoticComponent<ComboboxIndicatorGroupProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxItemGroupProps extends HTMLChakraProps<"div", ArkCombobox.ItemGroupBaseProps>, UnstyledProp {
}
export declare const ComboboxItemGroup: import("react").ForwardRefExoticComponent<ComboboxItemGroupProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxItemGroupLabelProps extends HTMLChakraProps<"div", ArkCombobox.ItemGroupLabelBaseProps>, UnstyledProp {
}
export declare const ComboboxItemGroupLabel: import("react").ForwardRefExoticComponent<ComboboxItemGroupLabelProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxItemProps extends HTMLChakraProps<"div", ArkCombobox.ItemBaseProps>, UnstyledProp {
}
export declare const ComboboxItem: import("react").ForwardRefExoticComponent<ComboboxItemProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxItemTextProps extends HTMLChakraProps<"div", ArkCombobox.ItemTextBaseProps>, UnstyledProp {
}
export declare const ComboboxItemText: import("react").ForwardRefExoticComponent<ComboboxItemTextProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxItemIndicatorProps extends HTMLChakraProps<"div", ArkCombobox.ItemIndicatorBaseProps>, UnstyledProp {
}
export declare const ComboboxItemIndicator: import("react").ForwardRefExoticComponent<ComboboxItemIndicatorProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxControlProps extends HTMLChakraProps<"div", ArkCombobox.ControlBaseProps>, UnstyledProp {
}
export declare const ComboboxControl: import("react").ForwardRefExoticComponent<ComboboxControlProps & import("react").RefAttributes<HTMLDivElement>>;
export interface ComboboxLabelProps extends HTMLChakraProps<"label", ArkCombobox.LabelBaseProps>, UnstyledProp {
}
export declare const ComboboxLabel: import("react").ForwardRefExoticComponent<ComboboxLabelProps & import("react").RefAttributes<HTMLLabelElement>>;
export interface ComboboxEmptyProps extends HTMLChakraProps<"div">, UnstyledProp {
}
export declare const ComboboxEmpty: import("react").ForwardRefExoticComponent<ComboboxEmptyProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const ComboboxContext: <T extends unknown>(props: ArkCombobox.ContextProps<T>) => import("react").ReactNode;
export declare const ComboboxItemContext: (props: ArkCombobox.ItemContextProps) => import("react").ReactNode;
export interface ComboboxHighlightChangeDetails<T extends CollectionItem = any> extends ArkCombobox.HighlightChangeDetails<T> {
}
export interface ComboboxValueChangeDetails<T extends CollectionItem = any> extends ArkCombobox.ValueChangeDetails<T> {
}
export interface ComboboxOpenChangeDetails extends ArkCombobox.OpenChangeDetails {
}
export interface ComboboxInputValueChangeDetails extends ArkCombobox.InputValueChangeDetails {
}
